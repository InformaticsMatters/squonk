---
name: build pr

# Actions that are driven by pull-requests to the main/master branch.
# Here we build container images but can't test then and don't push them
# and therefore do not require docker credentials.

# -----------------
# Control variables (GitHub Secrets)
# -----------------
#
# At the GitHub 'organisation' or 'project' level you must have the following
# GitHub 'Repository Secrets' defined (i.e. via 'Settings -> Secrets'): -
#
# ORG_GRADLE_PROJECT_CXNMAVENPASSWORD
# ORG_GRADLE_PROJECT_CXNMAVENREPOSITORYURL
# ORG_GRADLE_PROJECT_CXNMAVENUSER
#
# SQUONK_DECRYPTION_KEY
#
# -----------
# Environment (GitHub Environments)
# -----------
#
# Environment         (none)

on:
  pull_request:
    branches:
    - 'master'

env:
  ORG_GRADLE_PROJECT_cxnMavenPassword: ${{ secrets.ORG_GRADLE_PROJECT_CXNMAVENPASSWORD }}
  ORG_GRADLE_PROJECT_cxnMavenRepositoryUrl: ${{ secrets.ORG_GRADLE_PROJECT_CXNMAVENREPOSITORYURL }}
  ORG_GRADLE_PROJECT_cxnMavenUser: ${{ secrets.ORG_GRADLE_PROJECT_CXNMAVENUSER }}
  SQUONK_IMAGE_TAG: latest
  SQUONK_DECRYPTION_KEY: ${{ secrets.SQUONK_DECRYPTION_KEY }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Java 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Cache gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build
      run: ./gradlew dockerBuildImages -x test
      working-directory: components
