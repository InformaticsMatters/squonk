/*
 * Copyright (c) 2017 Informatics Matters Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'RDKit java services'
def contextName = 'rdkit_basic_services'

def RDBASE = System.getenv('RDBASE')


apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage


dependencies {
    compile project(':common')
    compile project(':common-camel')
    compile project(':core-services-common')
    compile project(':rdkit-lib')
    compile project(':rdkit-camel')
    
    compile "org.apache.camel:camel-core:$camelVersion"
    compile "org.apache.camel:camel-jackson:$camelVersion"
    compile "org.apache.camel:camel-servletlistener:$camelVersion"
    compile "org.apache.camel:camel-servlet:$camelVersion"
    compile "org.apache.camel:camel-swagger:$camelVersion"
    compile "org.apache.camel:camel-rabbitmq:$camelVersion"
    compile "org.apache.camel:camel-http4:$camelVersion"
    
    testCompile project(':core-test')
    
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    
    def tomcatVersion = '7.0.59'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

tomcat {
    enableSSL = false
}

/** Build a Docker image
 * run the generated image with something like this:
 * 
 * docker run -d --name core-services -p 80:8080 --link <name_of_postgres_db_container>:db --link <name_of_rabbitmq_container>:rabbitmq -v <host_dir>:/external <image id>
 * 
 * Note: the host directory <host_dir> containing the ChemAxon license file needs to be specified,
 * or some other mechanism used, probably by setting the value of the CHEMAXON_LICENSE_URL
 * environment variable using an -e option.
 * The following environment variables can be used to override the default settings:
 * CHEMCENTRAL_DB_SERVER, CHEMCENTRAL_DB_PORT, CHEMCENTRAL_DB_USERNAME, CHEMCENTRAL_DB_PASSWORD, CHEMAXON_LICENSE_URL
 */

docker {
    url = dockerHost
    certPath = null
}

task buildDockerFile(type: Dockerfile, dependsOn: war) {
    
    destFile = project.file('build/Dockerfile')
    from "informaticsmatters/rdkit-tomcat-debian:Release_2020_03_4"

    label(['maintainer': 'Tim Dudgeon <tdudgeon@informaticsmatters.com>'])
    label(['commit-hash': "${imageCommitHash}"])

    runCommand("rm -rf /usr/local/tomcat/webapps/*")
    
    def warFile = tasks.war.outputs.files.singleFile
    addFile('libs/' + warFile.name, "/usr/local/tomcat/webapps/${contextName}.war")
    
    exposePort(8080)
}

task buildDockerImage(type: DockerBuildImage, dependsOn: buildDockerFile) {
    inputDir = buildDockerFile.destFile.parentFile
    tag = "squonk/${contextName}:${dockerImageTag}"
}

tasks.test.onlyIf { RDBASE != null }
