/*
 * Copyright (c) 2020 Informatics Matters Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'Database creation'

apply plugin: 'java'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'org.unbroken-dome.test-sets'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.postgresql:postgresql:$postgresDriverVersion"
        classpath "org.flywaydb:flyway-gradle-plugin:$flywayVersion"
    }
}

flyway {
    // TODO replace localhost and port with a lookup - docker host may not be on localhost in some dev environments?
    url = 'jdbc:postgresql://localhost:5432/squonk'
    user = 'postgres'
    password = System.getenv('POSTGRES_PASSWORD') ?: 'postgres'
    schemas = ['users']

    println "Using DB URL of $url"
}

docker {
    //println "Using docker host of $dockerHost"
    url = dockerHost
    certPath = dockerCertPath
}

task buildDockerFile(type: Dockerfile) {

    destFile = project.file('build/Dockerfile')
    from "openjdk:8-jre"

    arg('MIGRATION_SUFFIX')

    label(['maintainer': 'Tim Dudgeon <tdudgeon@informaticsmatters.com>'])
    label(['commit-hash': "${imageCommitHash}"])

    runCommand('useradd -d /flyway -s /bin/bash flyway')
    workingDir('/flyway')

    runCommand("""wget -q https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${flywayVersion}/flyway-commandline-${flywayVersion}.zip &&\
 unzip flyway-commandline-${flywayVersion}.zip &&\
 rm flyway-commandline-${flywayVersion}.zip &&\
 cd flyway-${flywayVersion}/drivers/ &&\
 rm -f * &&\
 wget -q https://repo1.maven.org/maven2/org/postgresql/postgresql/${postgresDriverVersion}/postgresql-${postgresDriverVersion}.jar &&\
 rm ../conf/flyway.conf
""")

    workingDir("flyway-${flywayVersion}")

    addFile('src/main/upgrade-postgres.sh', './')
    addFile('src/main/flyway.conf', 'conf/')
    addFile('src/main/resources/db/migration${MIGRATION_SUFFIX}/*.sql', 'sql/')

    runCommand('chown -R flyway.flyway /flyway')
    runCommand('chmod +x upgrade-postgres.sh')
    runCommand('chmod +x flyway')
    user('flyway')
    defaultCommand('./upgrade-postgres.sh')

}

task buildDockerImage(type: DockerBuildImage) {

    description = 'Docker image for pre-Kubernetes deployments (squonk user)'
    dependsOn = ['buildDockerFile']

    inputDir = projectDir
    dockerFile = buildDockerFile.destFile
    tag = "squonk/flyway:${dockerImageTag}"
    buildArgs = ['MIGRATION_SUFFIX': '']

}

task buildDockerImage2(type: DockerBuildImage) {

    description = 'Docker image for Kubernetes deployments'
    dependsOn = ['buildDockerFile']

    inputDir = projectDir
    dockerFile = buildDockerFile.destFile
    tag = "squonk/flyway-2:${dockerImageTag}"
    buildArgs = ['MIGRATION_SUFFIX': '-2']

}
