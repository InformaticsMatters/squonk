/*
 * Copyright (c) 2017 Informatics Matters Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'service execution utils'

apply plugin: 'groovy'


apply plugin: 'org.unbroken-dome.test-sets'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.2.0'
    }
}

dependencies {
    compile project(':common')
    compile project(':common-utils')
    compile project(':common-camel')
    compile project(':core-services-common')
    compile project(':core-services-client')

    compile 'com.github.docker-java:docker-java:3.0.7'
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    compile "org.postgresql:postgresql:$postgresDriverVersion"

    testCompile "org.apache.camel:camel-jetty:$camelVersion"
    testCompile project(':core-test')
}

/* Integration test setup is borrowed from here:
 * http://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-integration-testing-with-the-testsets-plugin/
 * */
testSets {
    integrationTest
}

//check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

integrationTest {
    dependsOn rootProject.tasks.integrationTestEnvPrepare
    finalizedBy rootProject.tasks.integrationTestEnvShutdown
}

project.integrationTest {
    outputs.upToDateWhen { false }
}
