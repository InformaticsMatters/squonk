---
!<org.squonk.core.NextflowServiceDescriptor>
serviceConfig:
  id: "test.nextflow.nextflow2"
  name: "TestNextflow2"
  description: "a description"
  tags:
  - "tag1"
  resourceUrl: null
  icon: "icons/clustering.png"
  inputDescriptors:
  - name: "input"
    mediaType: "application/x-squonk-dataset-molecule+json"
    primaryType: "org.squonk.dataset.Dataset"
    secondaryType: "org.squonk.types.MoleculeObject"
  outputDescriptors:
  - name: "output"
    mediaType: "application/x-squonk-dataset-molecule+json"
    primaryType: "org.squonk.dataset.Dataset"
    secondaryType: "org.squonk.types.MoleculeObject"
  optionDescriptors:
  - !<org.squonk.options.OptionDescriptor>
    typeDescriptor: !<org.squonk.options.SimpleTypeDescriptor>
      type: "java.lang.String"
    key: "arg.message"
    label: "Simple message"
    description: "Simple message"
    defaultValue: "Hello World"
    visible: true
    editable: true
    modes:
    - "User"
  executorClassName: "org.squonk.execution.steps.impl.ThinDatasetNextflowInDockerExecutorStep"
inputRoutes:
- route: "FILE"
outputRoutes:
- route: "FILE"
nextflowConfig: |
  process.container = 'debian'
  docker.mountFlags = 'z'
nextflowFile: |
  params.message = 'Hello World'

  process simpleCopy {

    container 'debian'
    publishDir baseDir

    input:
    file input_data from file("$baseDir/input.data.gz")
    file input_meta from file("$baseDir/input.metadata")

    output:
    file 'output.data.gz'
    file 'output.metadata'
    file 'message.txt'

    """
    echo $params.message >> message.txt
    cp $input_data output.data.gz
    cp $input_meta output.metadata
    """
  }