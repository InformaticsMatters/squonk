[
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.verify",
      "name": "Verify structure (RDKit)",
      "description": "Verify that the molecules are valid according to RDKit",
      "tags": [
        "verify",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Verify+structure+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/verify"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.logp",
      "name": "LogP (RDKit)",
      "description": "RDKit LogP prediction",
      "tags": [
        "logp",
        "partitioning",
        "molecularproperties",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/LogP+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/logp"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.frac_c_sp3",
      "name": "Frac sp3 C (RDKit)",
      "description": "Fraction sp3 hybridised carbons using RDKit",
      "tags": [
        "fraccsp3",
        "topology",
        "molecularproperties",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Frac+sp3+C+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/frac_c_sp3"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.lipinski",
      "name": "Lipinski (RDKit)",
      "description": "Lipinski rule of 5 filter using RDKit",
      "tags": [
        "lipinski",
        "ruleoffive",
        "ro5",
        "hbond",
        "donors",
        "acceptors",
        "logp",
        "molecularweight",
        "druglike",
        "molecularproperties",
        "filter",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Lipinski+filter+%28RDKit%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 1,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.ExactMW_RDKit",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0,
            "maxValue": 500
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_RDKit",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBD_Lip_RDKit",
          "label": "HBD count",
          "description": "H-bond donor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBA_LIP_RDKit",
          "label": "HBA count",
          "description": "H-bond acceptor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 10
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/lipinski"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.ruleofthree",
      "name": "Rule of 3 (RDKit)",
      "description": "Rule of 3 filter using RDKit",
      "tags": [
        "ruleofthree",
        "ro3",
        "hbond",
        "donors",
        "acceptors",
        "logp",
        "molecularweight",
        "rotatablebonds",
        "leadlike",
        "molecularproperties",
        "filter",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Rule+of+3+filter+%28RDKit%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_RDKit",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.ExactMW_RDKit",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0,
            "maxValue": 300
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBD_RDKit",
          "label": "HBD count",
          "description": "H-bond donor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBA_RDKit",
          "label": "HBA count",
          "description": "H-bond acceptor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.RotBondCount_RDKit",
          "label": "Rot bond count",
          "description": "Rotatable bond count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/ruleofthree"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.ghose",
      "name": "Ghose filter (RDKit)",
      "description": "Ghose filter using RDKit",
      "tags": [
        "ghose",
        "logp",
        "molecularweight",
        "atomcount",
        "druglike",
        "molecularproperties",
        "molarrefractivity",
        "refractivity",
        "filter",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Ghose+filter+%28RDKit%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_RDKit",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": -0.4,
            "maxValue": 5.6
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.ExactMW_RDKit",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 160,
            "maxValue": 480
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.AtomCount_RDKit",
          "label": "Atom count",
          "description": "Atom count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 20,
            "maxValue": 70
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.MolarRefractivity_RDKit",
          "label": "Refractivity",
          "description": "Molar Refractivity",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 40,
            "maxValue": 130
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/ghose"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.veber",
      "name": "Veber filter (RDKit)",
      "description": "Veber filter using RDKit",
      "tags": [
        "veber",
        "druglike",
        "molecularproperties",
        "rotatablebonds",
        "tpsa",
        "psa",
        "filter",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Veber+filter+%28RDKit%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.TPSA_RDKit",
          "label": "TPSA",
          "description": "Topological polar surface area",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0,
            "maxValue": 140
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.RotBondCount_RDKit",
          "label": "Rot bond count",
          "description": "Rotatable bond count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 10
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/veber"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.reos",
      "name": "REOS (RDKit)",
      "description": "Rapid Elimination Of Swill (REOS) using RDKit",
      "tags": [
        "reos",
        "hbond",
        "donors",
        "acceptors",
        "logp",
        "molecularweight",
        "rotatablebonds",
        "charge",
        "formalcharge",
        "leadlike",
        "molecularproperties",
        "filter",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/REOS+Filter+%28RDKit%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.ExactMW_RDKit",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 200,
            "maxValue": 500
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_RDKit",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": -5,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBD_RDKit",
          "label": "HBD count",
          "description": "H-bond donor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBA_RDKit",
          "label": "HBA count",
          "description": "H-bond acceptor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 10
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.FormalCharge_RDKit",
          "label": "Formal charge",
          "description": "Formal charge",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": -2,
            "maxValue": 2
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.RotBondCount_RDKit",
          "label": "Rot bond count",
          "description": "Rotatable bond count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 8
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HeavyAtomCount_RDKit",
          "label": "Heavy atom count",
          "description": "Heavy atom count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 15,
            "maxValue": 50
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/reos"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.donors_acceptors",
      "name": "HBA & HBD (RDKit)",
      "description": "H-bond donor and acceptor counts using RDKit",
      "tags": [
        "hbond",
        "donors",
        "acceptors",
        "druglike",
        "molecularproperties",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/HBA+%26+HBD+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/donors_acceptors"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.molar_refractivity",
      "name": "Molar Refractivity (RDKit)",
      "description": "Molar Refractivity using RDKit",
      "tags": [
        "refractivity",
        "molarrefractivity",
        "molecularproperties",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Molar+Refractivity+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/molar_refractivity"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.tpsa",
      "name": "TPSA (RDKit)",
      "description": "Topological surface area using RDKit",
      "tags": [
        "tpsa",
        "psa",
        "molecularproperties",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/TPSA+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/tpsa"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.rings",
      "name": "Ring Count (RDKit)",
      "description": "Ring count and aromatic ring count using RDKit",
      "tags": [
        "rings",
        "aromatic",
        "molecularproperties",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Rotatable+bonds+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/rings"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.rotatable_bonds",
      "name": "Rotatable bonds (RDKit)",
      "description": "Rotatable bond count using RDKit",
      "tags": [
        "rotatablebonds",
        "molecularproperties",
        "rdkit"
      ],
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/rotatable_bonds"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.canonical_smiles",
      "name": "Canonical Smiles (RDKit)",
      "description": "Canonical Smiles using RDKit",
      "tags": [
        "smiles",
        "canonical",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Canonical+Smiles+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.mode",
          "label": "Fragment mode",
          "description": "How to handle molecules with multiple fragments",
          "values": [
            "WHOLE_MOLECULE",
            "BIGGEST_BY_ATOM_COUNT",
            "BIGGEST_BY_HEAVY_ATOM_COUNT",
            "BIGGEST_BY_MOLWEIGHT"
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/canonical_smiles"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.calculators.formal_charge",
      "name": "Formal Charge (RDKit)",
      "description": "Formal Charge using RDKit",
      "tags": [
        "charge",
        "formalcharge",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Formal+Charge+%28RDKit%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003777,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-rdkit-basic/rest/v1/calculators/formal_charge"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.chemcentral.search.structure",
      "name": "ChemCentral structure search",
      "description": "Structure search in the ChemCentral database using RDKit PostgreSQL cartridge",
      "tags": [
        "search",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Chemcentral+Structure+Search",
      "icon": "icons/structure_search.png",
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.MoleculeTypeDescriptor",
            "molType": "QUERY",
            "formats": [
              "mol",
              "smarts",
              "smiles"
            ],
            "type": "org.squonk.options.types.Structure"
          },
          "key": "body",
          "label": "Query Structure",
          "description": "Structure to use as the query as mol, smarts or smiles",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.table",
          "label": "Table to search",
          "description": "Structure table to search",
          "values": [
            "emolecules_order_bb",
            "molport"
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.mode",
          "label": "Search mode",
          "description": "Type of structure to run (exact, substructure, similarity",
          "values": [
            "exact",
            "sss"
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.limit",
          "label": "Limit",
          "description": "Max number of hits to return",
          "defaultValue": 100,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003800,
      "executorClassName": "org.squonk.execution.steps.impl.OutOnlyMoleculeServiceExecutorStep"
    },
    "executionEndpoint": "http://chemcentral-search:8080/chemcentral-search/rest/v1/db/search"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.chemcentral.search.similarity",
      "name": "ChemCentral similarity search",
      "description": "Similarity search in the ChemCentral database using RDKit PostgreSQL cartridge",
      "tags": [
        "search",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Chemcentral+Similarity+Search",
      "icon": "icons/structure_search.png",
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.MoleculeTypeDescriptor",
            "molType": "DISCRETE",
            "formats": [
              "smiles"
            ],
            "type": "org.squonk.options.types.Structure"
          },
          "key": "body",
          "label": "Query Structure",
          "description": "Structure to use as the query as smiles or smarts",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.table",
          "label": "Table to search",
          "description": "Structure table to search",
          "values": [
            "emolecules_order_bb",
            "molport"
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.mode",
          "label": "Search mode",
          "description": "Type of structure to run (exact, substructure, similarity)",
          "defaultValue": "sim",
          "visible": false,
          "editable": false,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "query.threshold",
          "label": "Similarity Cuttoff",
          "description": "Similarity score cuttoff between 0 and 1 (1 means identical)",
          "defaultValue": [
            "java.lang.Float",
            0.7
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.fp",
          "label": "Fingerprint type",
          "description": "Type of fingerprint to use for similarity search",
          "values": [
            "RDKIT",
            "MORGAN_CONNECTIVITY_2",
            "MORGAN_FEATURE_2"
          ],
          "defaultValue": "RDKIT",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.metric",
          "label": "Similarity Metric",
          "description": "Type of metric to use for similarity distance",
          "values": [
            "TANIMOTO",
            "DICE"
          ],
          "defaultValue": "TANIMOTO",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.limit",
          "label": "Limit",
          "description": "Max number of hits to return",
          "defaultValue": 100,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003800,
      "executorClassName": "org.squonk.execution.steps.impl.OutOnlyMoleculeServiceExecutorStep"
    },
    "executionEndpoint": "http://chemcentral-search:8080/chemcentral-search/rest/v1/db/search"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "rdkit.chemcentral.multisearch",
      "name": "ChemCentral multi search",
      "description": "Similarity search for multiple queries in the ChemCentral database using RDKit PostgreSQL cartridge",
      "tags": [
        "search",
        "rdkit"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Chemcentral+multi-search",
      "icon": "icons/structure_search.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.table",
          "label": "Table to search",
          "description": "Structure table to search",
          "values": [
            "emolecules_order_bb",
            "molport"
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "query.threshold",
          "label": "Similarity Cuttoff",
          "description": "Similarity score cuttoff between 0 and 1 (1 means identical)",
          "defaultValue": [
            "java.lang.Float",
            0.7
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.fp",
          "label": "Fingerprint type",
          "description": "Type of fingerprint to use for similarity search",
          "values": [
            "RDKIT",
            "MORGAN_CONNECTIVITY_2",
            "MORGAN_FEATURE_2"
          ],
          "defaultValue": "RDKIT",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.metric",
          "label": "Similarity Metric",
          "description": "Type of metric to use for similarity distance",
          "values": [
            "TANIMOTO",
            "DICE"
          ],
          "defaultValue": "TANIMOTO",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.limit",
          "label": "Limit",
          "description": "Max number of hits to return",
          "defaultValue": 100,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003800,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceBasicExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input"
      }
    ],
    "executionEndpoint": "http://chemcentral-search:8080/chemcentral-search/rest/v1/db/multisearch"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "smartcyp.predict",
      "name": "SMARTCyp",
      "description": "Cytochrome P450 metabolism prediction using SMARTCyp",
      "tags": [
        "p450",
        "cytochrome",
        "metabolism",
        "molecularproperties",
        "smartcyp"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/SMARTCyp",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "query.GEN",
          "label": "Calculate general",
          "description": "Perform the general P450 calculation",
          "defaultValue": true,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "query.2D6",
          "label": "Calculate 2D6",
          "description": "Perform the Cyp 2D6 calculation",
          "defaultValue": true,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "query.2C9",
          "label": "Calculate 2C9",
          "description": "Perform the Cyp 2C9 calculation",
          "defaultValue": true,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.rank",
          "label": "Max rank",
          "description": "Rank above which results are not included",
          "defaultValue": 3,
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "query.score",
          "label": "Score threshold",
          "description": "Threshold above which results are not included",
          "defaultValue": [
            "java.lang.Float",
            100
          ],
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "query.noxid",
          "label": "Empirical N-Oxidation Corrections",
          "description": "Apply Empirical Nitrogen Oxidation Corrections",
          "defaultValue": true,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003807,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-smartcyp/rest/v1/smartcyp"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.verify",
      "name": "Verify structure (ChemAxon)",
      "description": "Verify that molecules are valid according to ChemAxon's Marvin",
      "tags": [
        "verify",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Verify+structure+%28CXN%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/verify"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.logp",
      "name": "LogP (CXN)",
      "description": "LogP using ChemAxon calculators",
      "tags": [
        "logp",
        "partitioning",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/LogP+%28CXN%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/logp"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.logd",
      "name": "LogD (CXN)",
      "description": "LogD at specified pH using ChemAxon calculators",
      "tags": [
        "logd",
        "partitioning",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/LogD+%28CXN%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "query.pH",
          "label": "pH",
          "description": "pH value",
          "defaultValue": [
            "java.lang.Float",
            7.4
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/logd"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.logs",
      "name": "LogS (CXN)",
      "description": "Solubility (logS) at specified pH using ChemAxon calculators",
      "tags": [
        "logs",
        "solubility",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/LogS+%28CXN%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "query.pH",
          "label": "pH",
          "description": "pH value",
          "defaultValue": [
            "java.lang.Float",
            7.4
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/logs"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.apka",
      "name": "Acidic pKa (CXN)",
      "description": "Most acidic pKa using ChemAxon calculators",
      "tags": [
        "pka",
        "charge",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/pKa+%28CXN%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/apka"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.bpka",
      "name": "Basic pKa (CXN)",
      "description": "Most basic pKa using ChemAxon calculators",
      "tags": [
        "pka",
        "charge",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/pKa+%28CXN%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/bpka"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.atomcount",
      "name": "Atom Count (CXN)",
      "description": "Atom Count using ChemAxon calculators",
      "tags": [
        "atomcount",
        "topology",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Atom+Count+%28CXN%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/atomCount"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.lipinski",
      "name": "Lipinski (CXN)",
      "description": "Lipinski rule of 5 filter using ChemAxon calculators",
      "tags": [
        "lipinski",
        "filter",
        "druglike",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Lipinski+filter+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 1,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.MolWeight_CXN",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0,
            "maxValue": 500
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_CXN",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBD_CXN",
          "label": "HBD count",
          "description": "H-bond donor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBA_CXN",
          "label": "HBA count",
          "description": "H-bond acceptor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 10
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/lipinski"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.druglikefilter",
      "name": "Drug-like Filter (CXN)",
      "description": "Drug-like filter using ChemAxon calculators",
      "tags": [
        "druglike",
        "filter",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Drug-like+Filter+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.MolWeight_CXN",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0,
            "maxValue": 400
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.Ring_CXN",
          "label": "Ring count",
          "description": "Ring count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 1
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.RotatableBondCount_CXN",
          "label": "Rotatable bond count",
          "description": "Rotatable bond count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBD_CXN",
          "label": "HBD count",
          "description": "H-bond donor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBA_CXN",
          "label": "HBA count",
          "description": "H-bond acceptor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 10
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_CXN",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/drugLikeFilter"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.ghosefilter",
      "name": "Ghose Filter (CXN)",
      "description": "Ghose filter using ChemAxon calculators",
      "tags": [
        "ghose",
        "filter",
        "druglike",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Ghose+filter+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_CXN",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": -0.4,
            "maxValue": 5.6
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.MolWeight_CXN",
          "label": "MolWeight",
          "description": "molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 160,
            "maxValue": 480
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.AtomCount_CXN",
          "label": "Atom count",
          "description": "Atom count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 20,
            "maxValue": 70
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.MolarRefractivity_CXN",
          "label": "Refractivity",
          "description": "Molar Refractivity",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 40,
            "maxValue": 130
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/ghosefilter"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.veberfilter",
      "name": "Veber Filter (CXN)",
      "description": "Veber filter using ChemAxon calculators",
      "tags": [
        "veber",
        "filter",
        "druglike",
        "psa",
        "tpsa",
        "rotatablebonds",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Veber+filter+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.TPSA_CXN",
          "label": "TPSA",
          "description": "Topological polar surfacearea",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0,
            "maxValue": 140
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.RotatableBondCount_CXN",
          "label": "Rotatable bond count",
          "description": "Rotatable bond count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 10
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/veberfilter"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.ruleofthreefilter",
      "name": "Rule of 3 Filter (CXN)",
      "description": "Astex Rule of 3 filter using ChemAxon calculators",
      "tags": [
        "ruleofthree",
        "ro3",
        "hbond",
        "donors",
        "acceptors",
        "logp",
        "molecularweight",
        "rotatablebonds",
        "leadlike",
        "molecularproperties",
        "filter",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Rule+of+3+filter+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_CXN",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.MolWeight_CXN",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0,
            "maxValue": 300
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBD_CXN",
          "label": "HBD count",
          "description": "H-bond donor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBA_CXN",
          "label": "HBA count",
          "description": "H-bond acceptor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.RotatableBondCount_CXN",
          "label": "Rot bond count",
          "description": "Rotatable bond count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 3
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/ruleOfThreeFilter"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.reosfilter",
      "name": "REOS (CXN)",
      "description": "Rapid Elimination Of Swill filter using ChemAxon calculators",
      "tags": [
        "reos",
        "hbond",
        "donors",
        "acceptors",
        "logp",
        "molecularweight",
        "rotatablebonds",
        "charge",
        "formalcharge",
        "leadlike",
        "molecularproperties",
        "filter",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/REOS+filter+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "query.filterThreshold",
          "label": "Number of violations",
          "description": "Number of violations to accept",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.MolWeight_CXN",
          "label": "Mol weight",
          "description": "Molecular weight",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 200,
            "maxValue": 500
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.LogP_CXN",
          "label": "LogP",
          "description": "LogP partition coefficient",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": -5,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBD_CXN",
          "label": "HBD count",
          "description": "H-bond donor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 5
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HBA_CXN",
          "label": "HBA count",
          "description": "H-bond acceptor count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 10
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.FormalCharge_CXN",
          "label": "Formal charge",
          "description": "Formal charge",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": -2,
            "maxValue": 2
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.RotatableBondCount_CXN",
          "label": "Rot bond count",
          "description": "Rotatable bond count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 0,
            "maxValue": 8
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Integer"
          },
          "key": "query.HeavyAtomCount_CXN",
          "label": "Heavy atom count",
          "description": "Heavy atom count",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Integer",
            "minValue": 15,
            "maxValue": 50
          },
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/reosFilter"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.cnsMpo",
      "name": "CNS MPO (CXN)",
      "description": "CNS MPO score using ChemAxon calculators",
      "tags": [
        "cns",
        "mpo",
        "hbond",
        "donors",
        "pka",
        "logp",
        "logd",
        "tpsa",
        "molecularweight",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/CNS+MPO+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_ALL",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.filterThreshold",
          "label": "Filter range",
          "description": "Range of MPO scores to accept",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/cnsMpo"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.calculators.kidsMpo",
      "name": "KiDS MPO (CXN)",
      "description": "KiDS MPO score using ChemAxon calculators",
      "tags": [
        "kids",
        "mpo",
        "hbond",
        "donors",
        "tpsa",
        "rotatablebonds",
        "atomcount",
        "ringcount",
        "molecularproperties",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/KiDS+MPO+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_ALL",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "query.filterThreshold",
          "label": "Filter range",
          "description": "Range of MPO scores to accept",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003838,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/calculators/kidsMpo"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.screening.ecpf4",
      "name": "ECFP4 Screen (CXN)",
      "description": "Virtual screening using ChemAxon ECFP4 fingerprints. See http://www.chemaxon.com/products/screen/",
      "tags": [
        "virtualscreening",
        "screening",
        "ecfp",
        "ecfp4",
        "moleculardescriptors",
        "fingerprints",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/ECFP4+Screen+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.MoleculeTypeDescriptor",
            "molType": "DISCRETE",
            "formats": [
              "smiles"
            ],
            "type": "org.squonk.options.types.Structure"
          },
          "key": "header.structure",
          "label": "Query Structure",
          "description": "Structure to use as the query",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "header.threshold",
          "label": "Similarity Cuttoff",
          "description": "Similarity score cuttoff between 0 and 1 (1 means identical)",
          "defaultValue": [
            "java.lang.Float",
            0.7
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003857,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/descriptors/screening/ecfp4"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.screening.pharmacophore",
      "name": "Pharmacophore Screen (CXN)",
      "description": "Virtual screening using ChemAxon 2D pharmacophore fingerprints. See http://www.chemaxon.com/products/screen/",
      "tags": [
        "virtualscreening",
        "screening",
        "parmacophore",
        "moleculardescriptors",
        "fingerprints",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Pharmacophore+Screen+%28CXN%29",
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.MoleculeTypeDescriptor",
            "molType": "DISCRETE",
            "formats": [
              "smiles"
            ],
            "type": "org.squonk.options.types.Structure"
          },
          "key": "header.structure",
          "label": "Query Structure",
          "description": "Structure to use as the query",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "header.threshold",
          "label": "Similarity Cuttoff",
          "description": "Similarity score cuttoff between 0 and 1 (1 means identical)",
          "defaultValue": [
            "java.lang.Float",
            0.7
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003857,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/descriptors/screening/pharmacophore"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "chemaxon.clustering.sperex",
      "name": "SpereEx Clustering (CXN)",
      "description": "Sphere exclusion clustering using ChemAxon ECFP4 fingerprints. See http://www.chemaxon.com/products/jklustor/",
      "tags": [
        "clustering",
        "ecfp",
        "ecfp4",
        "chemaxon"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/SphereEx+Clustering+%28CXN%29",
      "icon": "icons/clustering.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "header.min_clusters",
          "label": "Min clusters",
          "description": "Minimum number of clusters to generate",
          "defaultValue": 5,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "header.max_clusters",
          "label": "Max clusters",
          "description": "Target maximum number of clusters to generate",
          "defaultValue": 10,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003857,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-chemaxon-basic/rest/v1/descriptors/clustering/spherex/ecfp4"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "cdk.calculators.verify",
      "name": "Verify structure (CDK)",
      "description": "Verify that the molecules are valid according to CDK",
      "tags": [
        "verify",
        "cdk"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Verify+structure+%28CDK%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003869,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-cdk-basic/rest/v1/calculators/verify"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "cdk.logp",
      "name": "LogP (CDK)",
      "description": "LogP predictions for XLogP, ALogP and AMR using CDK",
      "tags": [
        "logp",
        "partitioning",
        "molecularproperties",
        "cdk"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/LogP+%28CDK%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003869,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-cdk-basic/rest/v1/calculators/logp"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "cdk.donors_acceptors",
      "name": "HBA & HBD (CDK)",
      "description": "H-bond donor and acceptor counts using CDK",
      "tags": [
        "hbd",
        "donors",
        "hba",
        "acceptors",
        "topology",
        "molecularproperties",
        "cdk"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/HBA+%26+HBD+%28CDK%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003869,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-cdk-basic/rest/v1/calculators/donors_acceptors"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "cdk.wiener_numbers",
      "name": "Wiener Numbers (CDK)",
      "description": "Wiener path and polarity numbers using CDK",
      "tags": [
        "wiener",
        "topology",
        "molecularproperties",
        "cdk"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Wiener+Numbers+%28CDK%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003869,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-cdk-basic/rest/v1/calculators/wiener_numbers"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "cdk.export.sdf",
      "name": "SDF Export (CDK)",
      "description": "Convert to SD file format using CDK",
      "tags": [
        "export",
        "dataset",
        "sdf",
        "sdfile",
        "cdk"
      ],
      "icon": "default_icon.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "chemical/x-mdl-sdfile",
          "primaryType": "org.squonk.types.SDFile"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003876,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-cdk-basic/rest/v1/converters/dataset_to_sdf"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "cdk.dataset.convert.molecule.format",
      "name": "Convert molecule format",
      "description": "Convert molecule format for a Dataset using CDK",
      "tags": [
        "convert",
        "dataset",
        "format",
        "cdk"
      ],
      "icon": "default_icon.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "chemical/x-mdl-sdfile",
          "primaryType": "org.squonk.types.SDFile"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.MoleculeFormat",
          "label": "Molecule format",
          "description": "Format to convert molecules to",
          "values": [
            "mol",
            "mol:v2",
            "mol:v3",
            "smiles"
          ],
          "defaultValue": "mol",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003876,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-cdk-basic/rest/v1/converters/dataset_convert_format"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "ocl.calculators.verify",
      "name": "Verify structure (OCL)",
      "description": "Verify that the molecules are valid according to OpenChemLib",
      "tags": [
        "verify",
        "openchemlib"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/Verify+structure+%28OCL%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "query.filterMode",
          "label": "Filter mode",
          "description": "How to filter results",
          "values": [
            "INCLUDE_PASS",
            "INCLUDE_FAIL",
            "INCLUDE_ALL"
          ],
          "defaultValue": "INCLUDE_PASS",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003883,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "executionEndpoint": "http://chemservices:8080/chem-services-openchemlib-basic/rest/v1/calculators/verify"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "ocl.logp",
      "name": "LogP (OpenChemLib)",
      "description": "OpenChemLib LogP prediction",
      "tags": [
        "logp",
        "partitioning",
        "molecularproperties",
        "openchemlib"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/LogP+%28OpenChemLib%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003883,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-openchemlib-basic/rest/v1/calculators/logp"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "ocl.logs",
      "name": "LogS (OpenChemLib)",
      "description": "OpenChemLib Aqueous Solubility prediction",
      "tags": [
        "logs",
        "solubility",
        "molecularproperties",
        "openchemlib"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/LogS+%28OpenChemLib%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003883,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-openchemlib-basic/rest/v1/calculators/logs"
  },
  {
    "@class": "org.squonk.core.HttpServiceDescriptor",
    "serviceConfig": {
      "id": "ocl.psa",
      "name": "PSA (OpenChemLib)",
      "description": "OpenChemLib Polar Surface Area prediction",
      "tags": [
        "psa",
        "tpsa",
        "molecularproperties",
        "openchemlib"
      ],
      "resourceUrl": "https://squonk.it/xwiki/bin/view/Cell+Directory/Data/PSA+%28OpenChemLib%29",
      "icon": "icons/properties_add.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539857003883,
      "executorClassName": "org.squonk.execution.steps.impl.MoleculeServiceThinExecutorStep"
    },
    "executionEndpoint": "http://chemservices:8080/chem-services-openchemlib-basic/rest/v1/calculators/psa"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.dmpk.sygnature.tmax_cmax_sim.1",
      "name": "TmaxCmaxSimulation",
      "description": "Simulation of Tmax and Cmax",
      "tags": [
        "sygnature",
        "dmpk",
        "pk",
        "cmax",
        "tmax",
        "simulation",
        "prediction",
        "docker"
      ],
      "icon": "icons/program.png",
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "image/png",
          "primaryType": "org.squonk.types.PngImageFile"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.halfLife",
          "label": "Half life(elim)(hr)",
          "description": "Half life(elim)(hr)",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.absorption",
          "label": "Half life(abs)(hr)",
          "description": "Half life(abs)(hr)",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.dose",
          "label": "Dose(mg)",
          "description": "Dose(mg)",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.auc",
          "label": "AUC(mg/L.hr)",
          "description": "AUC(mg/L.hr)",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.time",
          "label": "Simulation Time Length(hr)",
          "description": "Simulation Time Length(hr)",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.dmpk.pk_tmax_cmax_sim -o ${POUT}output --half-life $halfLife --absorption $absorption --dose $dose --auc $auc --time $time"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.xchem.obabel.prepare.pdb.v1",
      "name": "OBabelPreparePDB",
      "description": "Prepare PDB file uisng Open Babel",
      "tags": [
        "rdkit",
        "xchem",
        "docker",
        "openbabel",
        "obabel",
        "prepare",
        "pdb",
        "convert"
      ],
      "icon": "icons/transform_molecule.png",
      "inputDescriptors": [
        {
          "name": "pdb",
          "mediaType": "chemical/x-pdb",
          "primaryType": "org.squonk.types.PDBFile"
        }
      ],
      "outputDescriptors": [
        {
          "name": "mol2",
          "mediaType": "chemical/x-mol2",
          "primaryType": "org.squonk.types.Mol2File"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.protonate",
          "label": "Protonate at pH",
          "description": "Optionally protonate side chains at this pH",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.docking.obabel_prepare_pdb -i ${PIN}pdb.pdb.gz -o ${POUT}mol2 -mol2${protonate ? ' -prot ' + protonate : ''} --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.cluster.butina",
      "name": "RDKitButinaClustering",
      "description": "Clustering similar molecules using RDKit Butina clustering",
      "tags": [
        "rdkit",
        "clustering",
        "similarity",
        "butina",
        "docker"
      ],
      "icon": "icons/clustering.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.threshold",
          "label": "Threshold",
          "description": "Similarity threshold",
          "defaultValue": [
            "java.lang.Float",
            0.7
          ],
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.fragment_method",
          "label": "Fragment method",
          "description": "Approach to use for picking biggest molecular fragment",
          "values": [
            "hac",
            "mw"
          ],
          "defaultValue": "hac",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "arg.output_fragment",
          "label": "Output biggest fragment",
          "description": "Output the biggest fragment rather than the whole molecule",
          "defaultValue": false,
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.descriptor",
          "label": "Descriptor",
          "description": "Descriptor/fingerprint to use",
          "values": [
            "maccs",
            "morgan2",
            "morgan3",
            "rdkit"
          ],
          "defaultValue": "rdkit",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.metric",
          "label": "Metric",
          "description": "Similarity metric to use",
          "values": [
            "asymmetric",
            "braunblanquet",
            "cosine",
            "dice",
            "kulczynski",
            "mcconnaughey",
            "rogotgoldberg",
            "russel",
            "sokal",
            "tanimoto"
          ],
          "defaultValue": "tanimoto",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "preserve": false
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.cluster_butina -i ${PIN}input.data.gz -if json -o ${POUT}output -of json -t ${threshold} -d ${descriptor} -m ${metric}${binding.variables.containsKey('fragment_method') ? ' --fragment-method ' + fragment_method : ''}${binding.variables.containsKey('output_fragment') && output_fragment ? ' --output-fragment' : ''} --thin --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.cluster.subsetpicker.simple",
      "name": "RDKitDiverseSubsetPicker",
      "description": "Diverse subset picker using RDKit Butina clustering",
      "tags": [
        "rdkit",
        "clustering",
        "similarity",
        "butina",
        "diverse",
        "subset",
        "docker"
      ],
      "icon": "icons/clustering.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.threshold",
          "label": "Threshold",
          "description": "Similarity threshold",
          "defaultValue": [
            "java.lang.Float",
            0.7
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.diversity",
          "label": "Diversity",
          "description": "Diversity threshold",
          "defaultValue": [
            "java.lang.Float",
            0.9
          ],
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.count",
          "label": "Count",
          "description": "Max number of molecules to pick",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.DatasetFieldTypeDescriptor",
            "inputName": "input",
            "typeFilters": [
              "java.lang.Number"
            ],
            "type": "java.lang.String"
          },
          "key": "arg.field",
          "label": "Field to Optimise",
          "description": "Field name whose values are to be optimised",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "arg.maximise",
          "label": "Maximum field values",
          "description": "Prefer molecules with higher values for the specified field",
          "defaultValue": false,
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.fragment_method",
          "label": "Fragment method",
          "description": "Approach to use for picking biggest molecular fragment",
          "values": [
            "hac",
            "mw"
          ],
          "defaultValue": "hac",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "arg.output_fragment",
          "label": "Output biggest fragment",
          "description": "Output the biggest fragment rather than the whole molecule",
          "defaultValue": false,
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.descriptor",
          "label": "Descriptor",
          "description": "Descriptor/fingerprint to use",
          "values": [
            "maccs",
            "morgan2",
            "morgan3",
            "rdkit"
          ],
          "defaultValue": "rdkit",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.metric",
          "label": "Metric",
          "description": "Similarity metric to use",
          "values": [
            "asymmetric",
            "braunblanquet",
            "cosine",
            "dice",
            "kulczynski",
            "mcconnaughey",
            "rogotgoldberg",
            "russel",
            "sokal",
            "tanimoto"
          ],
          "defaultValue": "tanimoto",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true,
        "preserve": false,
        "fieldDescriptors": [
          {
            "fieldName": "optimise",
            "optionName": "arg.field"
          }
        ]
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.cluster_butina -i ${PIN}input.data.gz -if json -o ${POUT}output -of json -t ${threshold} -d ${descriptor} -m ${metric} --num ${count} --exclude ${diversity} --field optimise ${maximise ? '--max' : '--min'}${binding.variables.containsKey('fragment_method') ? ' --fragment-method ' + fragment_method : ''}${binding.variables.containsKey('output_fragment') && output_fragment ? ' --output-fragment' : ''} --thin --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.cluster.butina.matrix.v1",
      "name": "RDKitClusterMatrix",
      "description": "Generate similarity matrix using RDKit Butina clustering",
      "tags": [
        "rdkit",
        "clustering",
        "similarity",
        "butina",
        "matrix",
        "docker"
      ],
      "icon": "icons/clustering.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.threshold",
          "label": "Threshold",
          "description": "Similarity threshold for clustering",
          "defaultValue": [
            "java.lang.Float",
            0.7
          ],
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.matrixThreshold",
          "label": "Matrix Threshold",
          "description": "Only output values above this similarity threshold",
          "defaultValue": [
            "java.lang.Float",
            0.5
          ],
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.descriptor",
          "label": "Descriptor",
          "description": "Descriptor/fingerprint to use",
          "values": [
            "maccs",
            "morgan2",
            "morgan3",
            "rdkit"
          ],
          "defaultValue": "rdkit",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.metric",
          "label": "Metric",
          "description": "Similarity metric to use",
          "values": [
            "asymmetric",
            "braunblanquet",
            "cosine",
            "dice",
            "kulczynski",
            "mcconnaughey",
            "rogotgoldberg",
            "russel",
            "sokal",
            "tanimoto"
          ],
          "defaultValue": "tanimoto",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.DefaultDockerExecutorStep"
    },
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.cluster_butina_matrix -i ${PIN}input.data.gz -if json -o ${POUT}output -of json -t ${threshold} -mt ${matrixThreshold} -d ${descriptor} -m ${metric} --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.conformer.basic",
      "name": "RDKitConformers",
      "description": "Generate 3D conformers using RDKit",
      "tags": [
        "rdkit",
        "conformer",
        "3d",
        "docker"
      ],
      "icon": "icons/molecule_generator.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.num",
          "label": "Number of conformers",
          "description": "Number of conformers to aim to generate",
          "defaultValue": 1,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.attempts",
          "label": "Number of attempts",
          "description": "Number of attempts to generate conformers",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.prune",
          "label": "Prune RMSD threshold",
          "description": "Prune RMSD threshold for removing similar conformers",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.method",
          "label": "Cluster method",
          "description": "Cluster method (RMSD or TFD)",
          "values": [
            "RMSD",
            "TFD"
          ],
          "defaultValue": "RMSD",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.threshold",
          "label": "Cluster threshold",
          "description": "Cluster threshold",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.minimize",
          "label": "Energy minimization iterations",
          "description": "Number of energy minimization iterations",
          "defaultValue": 0,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.conformers -i ${PIN}input.data.gz -if json -o ${POUT}output -of json -n $num -c $method${binding.variables.containsKey('attempts') ? ' -a ' + binding.variables.get('attempts') : ''}${binding.variables.containsKey('prune') ? ' -r ' + binding.variables.get('prune') : ''}${binding.variables.containsKey('threshold') ? ' -t ' + binding.variables.get('threshold') : ''}${binding.variables.containsKey('minimize') ? ' -e ' + binding.variables.get('minimize') : ''} --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.conformer.constrained",
      "name": "RDKitConstrainedConformers",
      "description": "Generate constrained 3D conformers using RDKit",
      "tags": [
        "rdkit",
        "conformer",
        "3d",
        "docker"
      ],
      "icon": "icons/molecule_generator.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "refMol",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.num",
          "label": "Number of conformers",
          "description": "Number of conformers to generate",
          "defaultValue": 1,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.refmolidx",
          "label": "Reference mol index",
          "description": "Reference molecule index",
          "defaultValue": 1,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.coresmiles",
          "label": "Core smiles",
          "description": "Core smiles to constrain (optional)",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.constrained_conf_gen -i ${PIN}input.data.gz -o ${POUT}output -of json -n $num -r refMol.data.gz --refmolidx $refmolidx${binding.variables.containsKey('coresmiles') ? ' -c \"' + binding.variables.get('coresmiles') + '\"': ''} --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.maxminpicker.enrich.1",
      "name": "RDKitMaxMinPickerEnrich",
      "description": "RDKit MaxMin picker for enriching a dataset with a diverse selection",
      "tags": [
        "rdkit",
        "maxmin",
        "picker",
        "diverse",
        "subset",
        "enrich",
        "docker"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "seeds",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.num",
          "label": "Number to pick",
          "description": "Number of molecules to pick",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.threshold",
          "label": "Threshold",
          "description": "Dissimilarity threshold (0.0 is identical)",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.fragment_method",
          "label": "Fragment method",
          "description": "Approach to use for picking biggest molecular fragment",
          "values": [
            "hac",
            "mw"
          ],
          "defaultValue": "hac",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "arg.output_fragment",
          "label": "Output biggest fragment",
          "description": "Output the biggest fragment rather than the whole molecule",
          "defaultValue": false,
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.descriptor",
          "label": "Descriptor",
          "description": "Descriptor/fingerprint to use",
          "values": [
            "maccs",
            "morgan2",
            "morgan3"
          ],
          "defaultValue": "morgan2",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true,
        "preserve": false
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.max_min_picker -i ${PIN}input.data.gz -if json -s seeds.data.gz -o ${POUT}output -of json${binding.variables.containsKey('num') ? ' --num ' + num : ''}${binding.variables.containsKey('threshold') ? ' --threshold ' + threshold : ''} --fragment-method ${fragment_method}${output_fragment ? ' --output-fragment' : ''} --descriptor ${descriptor} --meta --quiet"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.maxminpicker.simple.1",
      "name": "RDKitMaxMinPickerSimple",
      "description": "RDKit MaxMin picker for diverse subset selection",
      "tags": [
        "rdkit",
        "maxmin",
        "picker",
        "diverse",
        "subset",
        "docker"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.num",
          "label": "Number to pick",
          "description": "Number of molecules to pick",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.threshold",
          "label": "Threshold",
          "description": "Dissimilarity threshold (0.0 is identical)",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.fragment_method",
          "label": "Fragment method",
          "description": "Approach to use for picking biggest molecular fragment",
          "values": [
            "hac",
            "mw"
          ],
          "defaultValue": "hac",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "arg.output_fragment",
          "label": "Output biggest fragment",
          "description": "Output the biggest fragment rather than the whole molecule",
          "defaultValue": false,
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.descriptor",
          "label": "Descriptor",
          "description": "Descriptor/fingerprint to use",
          "values": [
            "maccs",
            "morgan2",
            "morgan3"
          ],
          "defaultValue": "morgan2",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true,
        "preserve": false
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.max_min_picker -i input.data.gz -if json -o output -of json${binding.variables.containsKey('num') ? ' --num ' + num : ''}${binding.variables.containsKey('threshold') ? ' --threshold ' + threshold : ''} --fragment-method ${fragment_method}${output_fragment ? ' --output-fragment' : ''} --descriptor ${descriptor} --meta --quiet"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.o3da.basic",
      "name": "RDKitOpen3DAlign",
      "description": "Generate 3D alignments using Open3DAlign in RDKit",
      "tags": [
        "rdkit",
        "conformer",
        "alignment",
        "open3dalign",
        "3d",
        "docker"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "queryMol",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.qmolidx",
          "label": "Query mol index",
          "description": "Query molecule index",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.threshold",
          "label": "O3DAlign score threshold",
          "description": "Keep molecules with O3DAlign scores within this range of the score for aligning the query to itself",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.num",
          "label": "Number of conformers",
          "description": "Number of conformers to generate if not already 3D",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.o3dAlign queryMol.data.gz -i ${PIN}input.data.gz -o ${POUT}output -of json${binding.variables.containsKey('qmolidx') ? ' --qmolidx ' + binding.variables.get('qmolidx') : ''}${binding.variables.containsKey('num') ? ' --num ' + binding.variables.get('num') : ''}${binding.variables.containsKey('threshold') ? ' --threshold ' + binding.variables.get('threshold') : ''} --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.xchem.pbf_ev.v1",
      "name": "PBF EV analyisis",
      "description": "PBF EV analysis ",
      "tags": [
        "rdkit",
        "xchem",
        "docker",
        "pbfev",
        "icr",
        "joshuameyers"
      ],
      "icon": "icons/transform_molecule.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.pbf_ev -i ${PIN}input.data.gz -if json -o ${POUT}output -of json --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.xchem.reaction.maker.v1",
      "name": "XChemReactionMaker",
      "description": "XChem react molecules and reactants",
      "tags": [
        "rdkit",
        "xchem",
        "enumeration",
        "reaction",
        "docker"
      ],
      "icon": "icons/chemreaction.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "reactants",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.reaction",
          "label": "Reaction",
          "description": "Reaction to use",
          "values": [
            "Amides",
            "Benzimidazole",
            "Benzoxazole",
            "Ester_Coupling",
            "Ether_Coupling",
            "Indole",
            "N-Alkylation",
            "Oxadiazole",
            "Reductive_Amination",
            "SNAr",
            "Sonogashira",
            "Sulfonamide",
            "Suzuki_Coupling",
            "Triazole",
            "Urea"
          ],
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input"
      },
      {
        "input": "reactants"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.rxn_maker -i ${PIN}input.data.gz --reagent_lib reactants.data.gz -o ${POUT}output --reaction ${reaction} -of json --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.xchem.smarts_filter.reaction",
      "name": "XChemReactionSmartsFilter",
      "description": "XChem Reaction Smarts Filter",
      "tags": [
        "rdkit",
        "xchem",
        "docker",
        "smarts",
        "reaction",
        "filter",
        "poised"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.rxn_smarts_filter -i ${PIN}input.data.gz -if json -o ${POUT}output -of json --thin --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.xchem.sanify.enumerate.v1",
      "name": "MoleculeEnumerator",
      "description": "Enumerate stereoisomers and tautomers",
      "tags": [
        "rdkit",
        "xchem",
        "docker",
        "sanify",
        "reaction",
        "molvs",
        "enumerate",
        "stereoisomer",
        "tautomer"
      ],
      "icon": "icons/molecule_generator.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "dockerImageVersion",
          "label": "RDKit version",
          "description": "Version of the RDKit Docker image to execute",
          "values": [
            "latest",
            "Release_2017_03_1",
            "Release_2016_09_2",
            "Release_2016_03_1",
            "Release_2015_09_2",
            "Release_2015_09_1"
          ],
          "defaultValue": "latest",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "arg.tautomers",
          "label": "Enumerate tautomers",
          "description": "Enumerate tautomers",
          "defaultValue": true,
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "arg.stereoisomers",
          "label": "Enumerate stereoisomers",
          "description": "Enumerate stereoisomers",
          "defaultValue": true,
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.molFormat",
          "label": "Molecule format",
          "description": "Output format for molecules",
          "values": [
            "smiles",
            "mol_2d",
            "mol_3d"
          ],
          "defaultValue": "smiles",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.sanifier -i ${PIN}input.data.gz -if json -o ${POUT}output -of json -mf $molFormat ${tautomers ? ' -et' : ''}${stereoisomers ? ' -es' : ''} --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.xchem.sanify.standardise.flatkinson.v1",
      "name": "FlatkinsonStandardiser",
      "description": "Molecule standardiser from Francis Atkinson",
      "tags": [
        "rdkit",
        "xchem",
        "docker",
        "sanify",
        "reaction",
        "flatkinson",
        "standardiser",
        "standardizer"
      ],
      "icon": "icons/transform_molecule.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "dockerImageVersion",
          "label": "RDKit version",
          "description": "Version of the RDKit Docker image to execute",
          "values": [
            "latest",
            "Release_2017_03_1",
            "Release_2016_09_2",
            "Release_2016_03_1",
            "Release_2015_09_2",
            "Release_2015_09_1"
          ],
          "defaultValue": "latest",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "preserve": false
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.sanifier -i ${PIN}input.data.gz -if json -o ${POUT}output -of json -st -stm flatkinson --meta"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.xchem.sanify.standardise.molvs.v1",
      "name": "MolVSStandardiser",
      "description": "Molecule standardiser using MolVS",
      "tags": [
        "rdkit",
        "xchem",
        "docker",
        "sanify",
        "reaction",
        "molvs",
        "standardiser",
        "standardizer"
      ],
      "icon": "icons/transform_molecule.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "dockerImageVersion",
          "label": "RDKit version",
          "description": "Version of the RDKit Docker image to execute",
          "values": [
            "latest",
            "Release_2017_03_1",
            "Release_2016_09_2",
            "Release_2016_03_1",
            "Release_2015_09_2",
            "Release_2015_09_1"
          ],
          "defaultValue": "latest",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "preserve": false
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "imageName": "informaticsmatters/rdkit_pipelines",
    "command": "python -m pipelines.rdkit.sanifier -i ${PIN}input.data.gz -if json -o ${POUT}output -of json -st -stm molvs --meta"
  },
  {
    "@class": "org.squonk.core.NextflowServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.pli.v1",
      "name": "PLI docking scoring",
      "description": "Score docked ligands with PLI",
      "tags": [
        "pli",
        "docking",
        "scoring",
        "3d",
        "docker",
        "nextflow"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "ligands",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "protein",
          "mediaType": "chemical/x-pdb",
          "primaryType": "org.squonk.types.PDBFile"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.score",
          "label": "Score threshold",
          "description": "Keep only molecules with scores better than this value",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetNextflowInDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "ligands",
        "output": "output"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "nextflowFile": "#!/usr/bin/env nextflow\n\nparams.ligands = 'ligands.data.gz'\nparams.protein = 'protein.pdb.gz'\nparams.chunk = 25\nparams.score = null\nparams.limit = 0\nparams.digits = 4\n\nligands = file(params.ligands)\nprotein = file(params.protein)\n\nprocess splitter {\n\n    beforeScript 'chmod g+w .'\n\n    input:\n    file ligands\n\n    output:\n    file 'ligand_part*.sdf.gz' into ligand_parts mode flatten\n    file 'ligand_part_metrics.txt' into splitter_metrics\n\n    \"\"\"\n    python -m pipelines_utils_rdkit.filter -i $ligands -c $params.chunk -l $params.limit -d $params.digits -o ligand_part -of sdf --meta\n    \"\"\"\n}\n\n\n/* Scores each file from the ligand_parts channel sending each resulting SD file to the results channel\n*/\nprocess pli_scoring {\n\n    beforeScript 'chmod g+w .'\n\n\tinput:\n    file part from ligand_parts\n\tfile protein\n\n    output:\n    file 'scored_part*.sdf' into scored_parts\n\n    \"\"\"\n\tpython -m pipelines.docking.plip -i $part -pdb $protein -o ${part.name.replace('ligand', 'scored')[0..-8]} -of sdf --no-gzip ${params.score ? ' -t ' + params.score : ''} --threads 1 &> scored_out.log\n    \"\"\"\n}\n\nprocess joiner {\n\n    beforeScript 'chmod g+w .'\n    publishDir baseDir, mode: 'link'\n\n    input:\n    file parts from scored_parts.collect()\n    file 'splitter_metrics.txt' from splitter_metrics\n\n    output:\n    file 'output.data.gz'\n    file 'output_metrics.txt'\n    file 'output.metadata'\n\n    \"\"\"\n    cat scored_part*.sdf | python -m pipelines_utils_rdkit.filter -if sdf -of json -o output --meta --thin\n    mv output_metrics.txt joiner_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt | sed s/__InputCount__/PLI/ > output_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt >> output_metrics.txt\n    grep '__OutputCount__' joiner_metrics.txt >> output_metrics.txt\n    echo '{\"type\":\"org.squonk.types.BasicObject\",\"valueClassMappings\":{\"pliff_cscore\":\"java.lang.Float\",\"pliff_iscore\":\"java.lang.Float\",\"pliff_tscore\":\"java.lang.Float\",\"pliff_gscore\":\"java.lang.Float\",\"pliff_score\":\"java.lang.Float\",\"pliff_nb_score\":\"java.lang.Float\"}}' > output.metadata\n    \"\"\"\n}\n",
    "nextflowConfig": "docker.enabled = true\ndocker.mountFlags = 'z'\nprocess.container = 'informaticsmatters/pli:latest'",
    "nextflowParams": "${binding.variables.containsKey('score') ? ' --score ' + score: ''}"
  },
  {
    "@class": "org.squonk.core.NextflowServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.docking.rdock.basic.v2",
      "name": "rDock docking",
      "description": "Dock ligands with rDock",
      "tags": [
        "rdock",
        "docking",
        "scoring",
        "3d",
        "docker",
        "nextflow"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "ligands",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "config",
          "mediaType": "application/zip",
          "primaryType": "org.squonk.types.ZipFile"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.num",
          "label": "Number of dockings",
          "description": "Execute this many docking runs",
          "defaultValue": 10,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "arg.top",
          "label": "Top scoring poses",
          "description": "Keep this many top scoring poses",
          "defaultValue": 1,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.score",
          "label": "Score filter",
          "description": "Filter out scores above this value",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.nscore",
          "label": "Normalised score filter",
          "description": "Filter out scores normalised by heavy atom count above this value",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetNextflowInDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "ligands"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "nextflowFile": "#!/usr/bin/env nextflow\n\n/* Squonk Nextflow pipline that runs Docking using rDock.\n* The contents of the zip file specified by params.receptor must contain the following:\n* 1. receptor.mol2 - the prepared protein in mol2 format\n* 2. receptor.as - the receptor active site definition\n* 3. receptor.prm - the rDock configuration file that refers to receptor.mol2 in its RECEPTOR_FILE property.\n* This zip file is unzipped and the contents used by rDock.\n* To test this manually run something like this:\n* nextflow run src/nextflow/docking/rdock.nsd.nf --ligands data/dhfr_3d.data.gz --receptor data/hivpr.config.zip --num_dockings 5 -with-docker informaticsmatters/rdkit_pipelines\n*/\n\nparams.ligands = \"$baseDir/ligands.data.gz\"\nparams.receptor = \"$baseDir/config.zip\"\nparams.chunk = 25\nparams.num_dockings = 100\nparams.top = 1\nparams.score = null\nparams.nscore = null\nparams.limit = 0\nparams.digits = 4\n\n\nligands = file(params.ligands)\nreceptorzip = file(params.receptor)\n\nprocess unzip_config {\n\n    beforeScript 'chmod g+w .'\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n    input:\n    file receptorzip\n\n    output:\n    file 'receptor.prm' into prmfile\n    file 'receptor.mol2' into protein\n    file 'receptor.as' into asfile\n\n    \"\"\"\n    unzip $receptorzip\n    \"\"\"\n\n}\n\n/* Splits the input into multiple files of ${params.chunk} records.\n*/\nprocess splitter {\n\n    beforeScript 'chmod g+w .'\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n    input:\n    file ligands\n\n    output:\n    file 'ligands_part*.sdf' into ligands_parts mode flatten\n    file 'ligands_part_metrics.txt' into splitter_metrics\n\n    \"\"\"\n    python -m pipelines_utils_rdkit.filter -i $ligands -c $params.chunk -l $params.limit -d $params.digits -o ligands_part -of sdf --no-gzip --meta\n    \"\"\"\n}\n\n/* Docks each file from the ligand_parts channel sending each resulting SD file to the results channel\n*/\nprocess rdock {\n\n    container 'informaticsmatters/rdock-mini:latest'\n    // change permissions on the work dir so that the rdock user in the container\n    // can write to the directory that is owned by root\n    beforeScript 'chmod g+w .'\n\n\tinput:\n    file part from ligands_parts\n    file prmfile\n\tfile protein\n\tfile asfile\n\n    output:\n    file 'docked_part*.sd' into docked_parts\n\n    \"\"\"\n\trbdock -r $prmfile -p dock.prm -n $params.num_dockings -i $part -o ${part.name.replace('ligands', 'docked')[0..-5]} > docked_out.log\n    \"\"\"\n}\n\n/* Filter, combine and publish the results\n*/\nprocess results {\n\n\tcontainer 'informaticsmatters/rdock-mini'\n\t// change permissions - see above\n\tbeforeScript 'chmod g+w .'\n\n\tinput:\n\tfile ligands\n\tfile part from docked_parts.collect()\n\n\toutput:\n\tfile 'results.sdf' into results\n\n\t\"\"\"\n\tsdsort -n -s -fSCORE docked_part*.sd |${params.score == null ? '' : \" sdfilter -f'\\$SCORE <= $params.score' |\"}${params.nscore == null ? '' : \" sdfilter -f'\\$SCORE.norm <= $params.nscore' |\"} sdfilter -f'\\$_COUNT <= ${params.top}' > results.sdf\n\t\"\"\"\n}\n\nprocess metrics {\n\n    beforeScript 'chmod g+w .'\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n    publishDir baseDir, mode: 'link'\n\n    input:\n    file 'results.sdf' from results\n    file 'splitter_metrics.txt' from splitter_metrics\n\n    output:\n    file 'output.data.gz'\n    file 'output.metadata'\n    file 'output_metrics.txt'\n\n    \"\"\"\n    python -m pipelines_utils_rdkit.filter -i results.sdf -of json -o output --meta\n    mv output_metrics.txt old_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt | sed s/__InputCount__/DockingRDock/ > output_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt >> output_metrics.txt\n    grep '__OutputCount__' old_metrics.txt >> output_metrics.txt\n    \"\"\"\n}\n",
    "nextflowConfig": "docker.enabled = true\ndocker.mountFlags = 'z'\nprocess.container = 'informaticsmatters/rdkit_pipelines'",
    "nextflowParams": "--ligands ligands.data.gz --receptor config.zip --num_dockings $num --top $top${binding.variables.containsKey('score') ? ' --score ' + score: ''}${binding.variables.containsKey('nscore') ? ' --nscore ' + nscore: ''}"
  },
  {
    "@class": "org.squonk.core.NextflowServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.docking.smog2016.v1",
      "name": "SMoG2016 docking scoring",
      "description": "Score docked ligands with SMoG2016",
      "tags": [
        "smog2016",
        "docking",
        "scoring",
        "3d",
        "docker",
        "nextflow"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "ligands",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "protein",
          "mediaType": "chemical/x-pdb",
          "primaryType": "org.squonk.types.PDBFile"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "arg.score",
          "label": "Score threshold",
          "description": "Keep only molecules with scores better than this value",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetNextflowInDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "ligands",
        "output": "output"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "nextflowFile": "#!/usr/bin/env nextflow\n\nparams.ligands = 'ligands.data.gz'\nparams.protein = 'protein.pdb.gz'\nparams.chunk = 25\nparams.score = null\nparams.limit = 0\nparams.digits = 4\n\nligands = file(params.ligands)\nprotein = file(params.protein)\n\nprocess splitter {\n\n    beforeScript 'chmod g+w .'\n\n    input:\n    file ligands\n\n    output:\n    file 'ligand_part*.sdf.gz' into ligand_parts mode flatten\n    file 'ligand_part_metrics.txt' into splitter_metrics\n\n    \"\"\"\n    python -m pipelines_utils_rdkit.filter -i $ligands -c $params.chunk -l $params.limit -d $params.digits -o ligand_part -of sdf --meta\n    \"\"\"\n}\n\n\n/* Scores each file from the ligand_parts channel sending each resulting SD file to the results channel\n*/\nprocess smog_scoring {\n\n    beforeScript 'chmod g+w .'\n\n\tinput:\n    file part from ligand_parts\n\tfile protein\n\n    output:\n    file 'scored_part*.sdf' into scored_parts\n\n    \"\"\"\n\tpython -m pipelines.docking.smog2016 -i $part -pdb $protein -o ${part.name.replace('ligand', 'scored')[0..-8]} -of sdf --no-gzip ${params.score ? ' -t ' + params.score : ''} --threads 1 &> scored_out.log\n    \"\"\"\n}\n\nprocess joiner {\n\n    beforeScript 'chmod g+w .'\n    publishDir baseDir, mode: 'link'\n\n    input:\n    file parts from scored_parts.collect()\n    file 'splitter_metrics.txt' from splitter_metrics\n\n\toutput:\n\tfile 'output_metrics.txt'\n\tfile 'output.data.gz'\n    file 'output.metadata'\n\n\t\"\"\"\n\tcat scored_part*.sdf | python -m pipelines_utils_rdkit.filter -if sdf -of json -o output --meta --thin\n\tmv output_metrics.txt joiner_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt | sed s/__InputCount__/SMOG/ > output_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt >> output_metrics.txt\n    grep '__OutputCount__' joiner_metrics.txt >> output_metrics.txt\n    echo '{\"type\":\"org.squonk.types.BasicObject\",\"valueClassMappings\":{\"SMoG2016_SCORE\":\"java.lang.Float\",\"EmbedRMS\":\"java.lang.Float\"}}' > output.metadata\n  \t\"\"\"\n}\n",
    "nextflowConfig": "docker.enabled = true\ndocker.mountFlags = 'z'\nprocess.container = 'informaticsmatters/smog:latest'\n",
    "nextflowParams": "${binding.variables.containsKey('score') ? ' --score ' + score: ''}"
  },
  {
    "@class": "org.squonk.core.NextflowServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.screen.basic",
      "name": "RDKitSimilarityScreening",
      "description": "RDKit Similarity Screening",
      "tags": [
        "rdkit",
        "screening",
        "similarity",
        "docker",
        "nextflow"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.MoleculeTypeDescriptor",
            "molType": "DISCRETE",
            "formats": [
              "smiles"
            ],
            "type": "org.squonk.options.types.Structure"
          },
          "key": "arg.query",
          "label": "Query molecule",
          "description": "Query molecule as smiles",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "arg.sim",
          "label": "Similarity",
          "description": "Similarity threshold (1.0 is identical)",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0.7,
            "maxValue": 1
          },
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.descriptor",
          "label": "Descriptor",
          "description": "Descriptor/fingerprint to use",
          "values": [
            "maccs",
            "morgan2",
            "morgan3",
            "rdkit"
          ],
          "defaultValue": "rdkit",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.metric",
          "label": "Metric",
          "description": "Similarity metric to use",
          "values": [
            "asymmetric",
            "braunblanquet",
            "cosine",
            "dice",
            "kulczynski",
            "mcconnaughey",
            "rogotgoldberg",
            "russel",
            "sokal",
            "tanimoto"
          ],
          "defaultValue": "tanimoto",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetNextflowInDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "input",
        "output": "output",
        "filtering": true
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "nextflowFile": "#!/usr/bin/env nextflow\n\nparams.input = \"$baseDir/input.data.gz\"\nparams.qsmiles\nparams.simmin = 0.7\nparams.simmax = 1.0\nparams.descriptor = 'rdkit'\nparams.metric = 'tanimoto'\nparams.chunk = 2500\nparams.limit = 0\nparams.digits = 4\n\ntarget = file(params.input)\n\nprocess splitter {\n\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n    input:\n    file target\n\n    output:\n    file 'target_part*.sdf.gz' into target_parts mode flatten\n    file 'target_part_metrics.txt' into splitter_metrics\n\n    \"\"\"\n    python -m pipelines_utils_rdkit.filter -i $target -c $params.chunk -l $params.limit -d $params.digits -o target_part -of sdf --meta\n    \"\"\"\n}\n\nprocess rdkitScreen {\n\n    container 'informaticsmatters/rdkit_pipelines'\n\n\tinput:\n    file part from target_parts\n\n    output:\n    file 'screened_part*.sdf.gz' into screened_parts\n\n    \"\"\"\n    python -m pipelines.rdkit.screen --qsmiles '$params.qsmiles' --simmin $params.simmin --simmax $params.simmax -d $params.descriptor -m $params.metric -i $part -o ${part.name.replace('target', 'screened')[0..-8]} -of sdf\n    \"\"\"\n}\n\nprocess joiner {\n\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n    publishDir baseDir, mode: 'link'\n\n    input:\n    file 'splitter_metrics.txt' from splitter_metrics\n\tfile parts from screened_parts.collect()\n\n\toutput:\n\tfile 'output_metrics.txt'\n\tfile 'output.data.gz'\n\tfile 'output.metadata'\n\n\t\"\"\"\n\tzcat $parts | python -m pipelines_utils_rdkit.filter -if sdf -of json -o output --meta\n\tmv output_metrics.txt joiner_metrics.txt\n\tgrep '__InputCount__' splitter_metrics.txt | sed s/__InputCount__/RDKitScreen/ > output_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt >> output_metrics.txt\n    grep '__OutputCount__' joiner_metrics.txt >> output_metrics.txt\n\t\"\"\"\n}\n",
    "nextflowConfig": "docker.enabled = true\ndocker.runOptions = '-u $(id -u):$(id -g)'\ndocker.mountFlags = 'z'\nprocess.container = 'informaticsmatters/rdkit_pipelines'",
    "nextflowParams": "--qsmiles \"$query_source\" --simmin $sim.minValue --simmax $sim.maxValue --descriptor $descriptor --metric $metric"
  },
  {
    "@class": "org.squonk.core.NextflowServiceDescriptor",
    "serviceConfig": {
      "id": "pipelines.rdkit.screen.multi",
      "name": "RDKitMultiSimilarityScreening",
      "description": "RDKit Similarity Screening against multiple query structures",
      "tags": [
        "rdkit",
        "screening",
        "similarity",
        "docker",
        "nextflow"
      ],
      "icon": "icons/filter_molecules.png",
      "inputDescriptors": [
        {
          "name": "target",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "query",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "org.squonk.types.NumberRange$Float"
          },
          "key": "arg.sim",
          "label": "Similarity",
          "description": "Similarity threshold (1.0 is identical)",
          "defaultValue": {
            "@class": "org.squonk.types.NumberRange$Float",
            "minValue": 0.7,
            "maxValue": 1
          },
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.descriptor",
          "label": "Descriptor",
          "description": "Descriptor/fingerprint to use",
          "values": [
            "maccs",
            "morgan2",
            "morgan3",
            "rdkit"
          ],
          "defaultValue": "rdkit",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "arg.metric",
          "label": "Metric",
          "description": "Similarity metric to use",
          "values": [
            "asymmetric",
            "braunblanquet",
            "cosine",
            "dice",
            "kulczynski",
            "mcconnaughey",
            "rogotgoldberg",
            "russel",
            "sokal",
            "tanimoto"
          ],
          "defaultValue": "tanimoto",
          "visible": true,
          "editable": true,
          "modes": [
            "User"
          ]
        }
      ],
      "executorClassName": "org.squonk.execution.steps.impl.ThinDatasetNextflowInDockerExecutorStep"
    },
    "thinDescriptors": [
      {
        "input": "target",
        "output": "output",
        "filtering": true
      },
      {
        "input": "query"
      }
    ],
    "inputRoutes": [
      {
        "route": "FILE"
      },
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "nextflowFile": "#!/usr/bin/env nextflow\n\nparams.target = \"$baseDir/target.data.gz\"\nparams.query = \"$baseDir/query.data.gz\"\nparams.simmin = 0.7\nparams.simmax = 1.0\nparams.descriptor = 'rdkit'\nparams.metric = 'tanimoto'\nparams.chunk = 500\nparams.limit = 0\nparams.digits = 4\n\ntarget = file(params.target)\nquery = file(params.query)\n\nprocess splitter {\n\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n    input:\n    file target\n\n    output:\n    file 'target_part*.sdf.gz' into target_parts mode flatten\n    file 'target_part_metrics.txt' into splitter_metrics\n\n    \"\"\"\n    python -m pipelines_utils_rdkit.filter -i $target -c $params.chunk -l $params.limit -d $params.digits -o target_part -of sdf --meta\n    \"\"\"\n}\n\nprocess rdkitScreen {\n\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n\tinput:\n    file part from target_parts\n    file 'query.data.gz' from query\n\n    output:\n    file 'screened_part*.sdf.gz' into screened_parts\n\n    \"\"\"\n    python -m pipelines.rdkit.screen_multi -i $part --qjson query.data.gz --simmin $params.simmin --simmax $params.simmax -d $params.descriptor -m $params.metric -o ${part.name.replace('target', 'screened')[0..-8]} -of sdf\n    \"\"\"\n}\n\nprocess joiner {\n\n    container 'informaticsmatters/rdkit_pipelines:latest'\n\n    publishDir baseDir, mode: 'link'\n\n    input:\n    file 'splitter_metrics.txt' from splitter_metrics\n\tfile parts from screened_parts.collect()\n\n\toutput:\n\tfile 'output_metrics.txt'\n\tfile 'output.data.gz'\n\tfile 'output.metadata'\n\n\t\"\"\"\n\tzcat $parts | python -m pipelines_utils_rdkit.filter -if sdf -of json -o output --meta\n\tmv output_metrics.txt joiner_metrics.txt\n\tgrep '__InputCount__' splitter_metrics.txt | sed s/__InputCount__/RDKitScreen/ > output_metrics.txt\n    grep '__InputCount__' splitter_metrics.txt >> output_metrics.txt\n    grep '__OutputCount__' joiner_metrics.txt >> output_metrics.txt\n\t\"\"\"\n}\n",
    "nextflowConfig": "docker.enabled = true\ndocker.runOptions = '-u $(id -u):$(id -g)'\ndocker.mountFlags = 'z'\nprocess.container = 'informaticsmatters/rdkit_pipelines'",
    "nextflowParams": "--simmin $sim.minValue --simmax $sim.maxValue --descriptor $descriptor --metric $metric"
  },
  {
    "@class": "org.squonk.core.DockerServiceDescriptor",
    "serviceConfig": {
      "id": "docker.generic.dataset.v1",
      "name": "GenericDockerProcessDataset",
      "description": "Process Dataset with command in Docker container",
      "tags": [
        "program",
        "code",
        "dataset",
        "docker"
      ],
      "icon": "icons/program.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "dockerImage",
          "label": "Docker image name",
          "description": "The Docker image to use",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "inputMediaType",
          "label": "Input media type",
          "description": "The format the input will be written as e.g. application/x-squonk-dataset-molecule+json",
          "values": [
            "application/x-squonk-dataset-molecule+json",
            "chemical/x-mdl-sdfile"
          ],
          "defaultValue": "application/x-squonk-dataset-molecule+json",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "outputMediaType",
          "label": "Output media type",
          "description": "The format the output will be read as e.g. chemical/x-mdl-sdfile",
          "values": [
            "application/x-squonk-dataset-molecule+json",
            "chemical/x-mdl-sdfile"
          ],
          "defaultValue": "application/x-squonk-dataset-molecule+json",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.MultiLineTextTypeDescriptor",
            "rows": 20,
            "cols": 60,
            "mimeType": "text/x-shellscript"
          },
          "key": "dockerCommand",
          "label": "Command",
          "description": "The command to be executed e.g. bash script to execute inside container",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539856882476,
      "executorClassName": "org.squonk.execution.steps.impl.GenericDatasetDockerExecutorStep"
    },
    "inputRoutes": [
      {
        "route": "FILE"
      }
    ],
    "outputRoutes": [
      {
        "route": "FILE"
      }
    ]
  },
  {
    "@class": "org.squonk.core.DefaultServiceDescriptor",
    "serviceConfig": {
      "id": "core.dataset.filter.slice.v1",
      "name": "Dataset slice selector",
      "description": "Generate a defined slice of the dataset",
      "tags": [
        "filter",
        "slice",
        "dataset"
      ],
      "icon": "icons/filter.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "skip",
          "label": "Number to skip",
          "description": "The number of records to skip",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "count",
          "label": "Number to include",
          "description": "The number of records to include after skipping",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539856882483,
      "executorClassName": "org.squonk.execution.steps.impl.DatasetSelectSliceStep"
    }
  },
  {
    "@class": "org.squonk.core.DefaultServiceDescriptor",
    "serviceConfig": {
      "id": "core.dataset.filter.random.v1",
      "name": "Dataset random selector",
      "description": "Generate a random slice of the dataset",
      "tags": [
        "filter",
        "random",
        "dataset"
      ],
      "icon": "icons/filter.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Float"
          },
          "key": "random",
          "label": "Random fraction (0-1)",
          "description": "The fraction of records to randomly select (between 0 and 1, default 0.001)",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Integer"
          },
          "key": "count",
          "label": "Max records",
          "description": "The max number of records to include, default 1000",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539856882484,
      "executorClassName": "org.squonk.execution.steps.impl.DatasetSelectRandomStep"
    }
  },
  {
    "@class": "org.squonk.core.DefaultServiceDescriptor",
    "serviceConfig": {
      "id": "core.dataset.merger.v1",
      "name": "DatasetMerger",
      "description": "Merge datasets into one",
      "tags": [
        "merge",
        "dataset"
      ],
      "icon": "icons/merge.png",
      "inputDescriptors": [
        {
          "name": "input5",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "input4",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "input3",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "input2",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        },
        {
          "name": "input1",
          "mediaType": "application/x-squonk-dataset-molecule+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.MoleculeObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.DatasetsFieldOptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "mergeFieldName",
          "label": "Merge field name",
          "description": "Name of value field which identifies equivalent entries",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.Boolean"
          },
          "key": "keepFirst",
          "label": "When duplicate keep first",
          "description": "When duplicate field name use the existing value rather than the new one",
          "defaultValue": true,
          "visible": true,
          "editable": true,
          "minValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539856882485,
      "executorClassName": "org.squonk.execution.steps.impl.DatasetMergerStep"
    }
  },
  {
    "@class": "org.squonk.core.DefaultServiceDescriptor",
    "serviceConfig": {
      "id": "core.dataset.enricher.v1",
      "name": "DatasetEnricher",
      "description": "Enrich a dataset with content from another dataset",
      "tags": [
        "enrich",
        "merge",
        "dataset"
      ],
      "icon": "icons/merge.png",
      "inputDescriptors": [
        {
          "name": "newData",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        },
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.DatasetFieldTypeDescriptor",
            "inputName": "input",
            "typeFilters": [
              "java.lang.String",
              "java.lang.Integer"
            ],
            "type": "java.lang.String"
          },
          "key": "mainField",
          "label": "Input field name",
          "description": "Name of field in input which identifies equivalent entries",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.DatasetFieldTypeDescriptor",
            "inputName": "newData",
            "typeFilters": [
              "java.lang.String",
              "java.lang.Integer"
            ],
            "type": "java.lang.String"
          },
          "key": "extraField",
          "label": "NewData field name",
          "description": "Name of field in newData which identifies equivalent entries",
          "visible": true,
          "editable": true,
          "minValues": 0,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        },
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.SimpleTypeDescriptor",
            "type": "java.lang.String"
          },
          "key": "mergeMode",
          "label": "Mode: main, values or both",
          "description": "Merge the main content (e.g the structure for molecules), the values or both",
          "values": [
            "main",
            "values",
            "both"
          ],
          "defaultValue": "both",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539856882486,
      "executorClassName": "org.squonk.execution.steps.impl.DatasetEnricherStep"
    }
  },
  {
    "@class": "org.squonk.core.DefaultServiceDescriptor",
    "serviceConfig": {
      "id": "core.dataset.uuidfilter.v1",
      "name": "DatasetUUIDFilter",
      "description": "Filter a dataset for a set of UUIDs",
      "tags": [
        "filter",
        "uuid",
        "dataset"
      ],
      "icon": "icons/filter.png",
      "inputDescriptors": [
        {
          "name": "input",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "outputDescriptors": [
        {
          "name": "output",
          "mediaType": "application/x-squonk-dataset-basic+json",
          "primaryType": "org.squonk.dataset.Dataset",
          "secondaryType": "org.squonk.types.BasicObject"
        }
      ],
      "optionDescriptors": [
        {
          "@class": "org.squonk.options.OptionDescriptor",
          "typeDescriptor": {
            "@class": "org.squonk.options.MultiLineTextTypeDescriptor",
            "rows": 10,
            "cols": 60,
            "mimeType": "text/plain"
          },
          "key": "uuids",
          "label": "UUIDs",
          "description": "List of UUIDs",
          "visible": true,
          "editable": true,
          "minValues": 1,
          "maxValues": 1,
          "modes": [
            "User"
          ]
        }
      ],
      "status": "ACTIVE",
      "statusLastChecked": 1539856882487,
      "executorClassName": "org.squonk.execution.steps.impl.DatasetUUIDFilterStep"
    }
  }
]
