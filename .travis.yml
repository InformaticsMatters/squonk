---

# -----------------
# Control variables (Travis Settings)
# -----------------
#
# To build (and publish) Squonk you will need the following environment
# variables set in Travis Settings: -
#
#   DOCKER_USERNAME     Typically 'imtravis'
#   DOCKER_PASSWORD
#
#   ORG_GRADLE_PROJECT_cxnMavenRepositoryUrl
#   ORG_GRADLE_PROJECT_cxnMavenUser
#   ORG_GRADLE_PROJECT_cxnMavenPassword
#
#   SQUONK_DECRYPTION_KEY
#
# Set the following to run AWX jobs (deploy Squonk automatically): -
#
#   AWX_HOST            The AWX server hostname
#   AWX_USER            An AWX user that's able to execute the chosen AWX jobs
#   AWX_USER_PASSWORD   The AWX user's password

# For Gradle build hints checkout the following: -
#   https://guides.gradle.org/executing-gradle-builds-on-travisci
#   https://docs.travis-ci.com/user/languages/java/

os: linux
language: java
jdk: openjdk8

services:
- docker

stages:

  # The 'compile' stage
  # - Compiles the code (a quick initial stage).
- name: compile
  if: tag IS NOT present

  # The 'test' stage
  # - Compiles the code and also runs unit tests.
- name: test
  if: tag IS NOT present

  # The 'docker' stage
  # - Assembles docker images to verify that they can be constructed.
  #   It does not push these images - it's simply an assembly-check.
  #   We do this if we're not the result of a tag and we're not on master.
- name: docker
  if: tag IS NOT present AND branch != master

  # The 'publish' stage
  # - Assembles docker images and pushes the resultant images to Docker Hub.
  #   We execute the 'publish' stage and always publish an image
  #   on master or when tagged. When tagged the tag value is used for the
  #   image tag, when not tagged the published image tag is 'latest'.
- name: publish
  if: tag IS present OR branch == master

  # The 'trigger' stage
  # - triggers jobs on an AWX server.
- name: trigger
  if:  (tag IS present OR branch == master) AND env(AWX_HOST) is present

# Install phase.
#
# Before doing _anything_ some (encrypted) license files will be required.
# We need the ChemAxon license (in HOME and in the deployment)
# and the ChemAxon library.
install:
- pushd "$TRAVIS_BUILD_DIR"/components
- ./gradlew installChemaxonLicenseToHome
- ./gradlew installChemaxonLicense
- ./gradlew installChemaxonLibrary
- popd

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/

env:
  global:
  # The origin of the AWX trigger code
  - AWX_TRIGGER_ORIGIN=https://raw.githubusercontent.com/informaticsmatters/trigger-awx/1.0.2

jobs:
  include:

  # Compile-stage jobs...

  - stage: compile
    name: Compile
    script: scripts/compile.sh

  # Test-stage jobs...

  - stage: test
    name: Unit Test
    script: scripts/test.sh

  # Docker-stage jobs...

  - stage: docker
    name: Docker Build
    script: scripts/docker.sh

  # Publish-stage jobs...

  - stage: publish
    name: Docker Build and Push (master/latest)
    script: scripts/publish-latest.sh
    if: tag IS NOT present AND branch == master

  - stage: publish
    name: Docker Build and Push (master/tag)
    script: scripts/publish-tag-master.sh
    if: tag IS present AND branch == master

  - stage: publish
    name: Docker Build and Push (branch/tag)
    script: scripts/publish-tag-branch.sh
    if: tag IS present AND branch != master

  # Trigger-stage jobs

#  - stage: trigger
#    name: Trigger (master/latest)
#    language: python
#    python: '3.8'
#    install: skip
#    script:
#    - curl --location --retry 3 ${AWX_TRIGGER_ORIGIN}/requirements.txt --output trigger-awx-requirements.txt
#    - curl --location --retry 3 ${AWX_TRIGGER_ORIGIN}/trigger-awx-tag.sh --output trigger-awx-tag.sh
#    - pip install -r trigger-awx-requirements.txt
#    - chmod +x trigger-awx-tag.sh
#    - ./trigger-awx-tag.sh latest sq_image_tag "Squonk -staging-"
#    if: tag IS NOT present AND branch == master AND env(AWX_USER_PASSWORD) is present
