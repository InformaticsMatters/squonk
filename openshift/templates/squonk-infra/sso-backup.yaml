---

# oc process -f sso-backup.yaml | oc create -f -
# oc delete cronjob --selector template=sso-backup

kind: Template
apiVersion: v1
metadata:
  name: pg-backup
  annotations:
    description: Infrastructure Backups
    tags: infra,postgresql,backup
labels:
  template: pg-backup

parameters:

- name: BACKUP_REGISTRY
  value: 'docker.io'
- name: BACKUP_IMAGE
  value: 'informaticsmatters/sql-backup'
- name: BACKUP_TAG
  value: 'stable'

objects:

# The HOURLY CronJob (running at HH:07).
# This job will create new postgres backups
# Keeping the last 24 backups in the directory /backup/hourly
- kind: CronJob
  apiVersion: batch/v2alpha1
  metadata:
    name: postgresql-backup-hourly
  spec:
    schedule: '7 * * * *'
    startingDeadlineSeconds: 180
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          metadata:
            labels:
              name: postgresql-backup
          spec:
            # Application containers
            containers:
            - image: ${BACKUP_REGISTRY}/${BACKUP_IMAGE}:${BACKUP_TAG}
              name: postgresql-backup
              imagePullPolicy: IfNotPresent
              volumeMounts:
              - name: postgresql-backup-data
                mountPath: /backup

              env:
              - name: BACKUP_TYPE
                value: hourly
              - name: BACKUP_COUNT
                value: '24'
              - name: PGHOST
                value: db-postgresql
              - name: PGADMINPASS
                valueFrom:
                  secretKeyRef:
                    name: postgresql-secrets
                    key: database-admin-password

            volumes:
            - name: postgresql-backup-data
              persistentVolumeClaim:
                claimName: postgresql-backup-claim
            restartPolicy: Never

# The DAILY CronJob (running at 03:37).
# This job will keep the oldest of the hourly backups
# (when there are 24 hourly backups).
# Keeping the last 7 backups in the directory /backup/daily
- kind: CronJob
  apiVersion: batch/v2alpha1
  metadata:
    name: postgresql-backup-daily
  spec:
    schedule: '37 3 * * *'
    startingDeadlineSeconds: 180
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          metadata:
            labels:
              name: postgresql-backup
          spec:
            # Application containers
            containers:
            - image: ${BACKUP_REGISTRY}/${BACKUP_IMAGE}:${BACKUP_TAG}
              name: postgresql-backup
              imagePullPolicy: IfNotPresent
              volumeMounts:
              - name: postgresql-backup-data
                mountPath: /backup

              env:
              - name: BACKUP_TYPE
                value: daily
              - name: BACKUP_COUNT
                value: '7'

            volumes:
            - name: postgresql-backup-data
              persistentVolumeClaim:
                claimName: postgresql-backup-claim
            restartPolicy: Never
