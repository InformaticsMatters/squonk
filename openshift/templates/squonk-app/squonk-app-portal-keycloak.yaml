---

# The Squonk Portal (KeyCloak) deployment
#
# oc process -f squonk-app-portal-keycloak.yaml | oc create -f -
# oc delete all,cm,pvc,routes,secrets --selector template=squonk-app-portal

kind: Template
apiVersion: v1
metadata:
  name: squonk
  annotations:
    description: Squonk Application Service Definition
    tags: squonk,portal
labels:
  template: squonk-app-portal
  app: squonk-app-portal

parameters:

# -------------
# Configuration
# -------------
# Common (not specific to any service)

- name: APP_NAMESPACE
  value: squonk
- name: PULL_POLICY
  value: IfNotPresent

# ------
# Portal
# ------

- name: PORTAL_IMAGE_TAG
  value: latest
- name: PORTAL_SERVICE_CALLBACK
  value: "http://localhost:8080/portal"
- name: SQUONK_HOST
  required: true
- name: LOGOUT_REDIRECT_TO
  required: true

- name: PORTAL_CPU_REQUEST
  value: 500m
- name: PORTAL_CPU_LIMIT
  value: 1000m
- name: PORTAL_MEM_REQUEST
  value: 500Mi
- name: PORTAL_MEM_LIMIT
  value: 1Gi

objects:

# -----------------------------------------------------------------------------
# Portal
# -----------------------------------------------------------------------------

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: portal
    namespace: ${APP_NAMESPACE}
  spec:
    replicas: 1
    selector:
      name: portal
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: portal
      spec:
        initContainers:
        - image: yauritux/busybox-curl
          name: wait-for-core-before-portal
          command: ['sh', '-c',
            'until (( curl http://coreservices:8080/rest/ping --connect-timeout 5 )); do sleep 2; done']
        containers:
        - image: squonk/portal:${PORTAL_IMAGE_TAG}
          name: portal
          imagePullPolicy: ${PULL_POLICY}
          env:
          - name: POSTGRES_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: host
          - name: POSTGRES_SQUONK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: user-password
          - name: SERVICE_CALLBACK
            value: ${PORTAL_SERVICE_CALLBACK}
          - name: LOGOUT_REDIRECT_TO
            value: ${LOGOUT_REDIRECT_TO}
          volumeMounts:
            - mountPath: /usr/local/tomcat/conf/context.xml
              name: squonk-sso-config
              subPath: context.xml
              readOnly: true
            - mountPath: /usr/local/tomcat/webapps/portal/WEB-INF/keycloak.json
              name: squonk-sso-config
              subPath: keycloak.json
              readOnly: true
#          readinessProbe:
#            httpGet:
#              path: /portal
#              port: 8080
#            initialDelaySeconds: 30
#            timeoutSeconds: 5
#          livenessProbe:
#            httpGet:
#              path: /portal
#              port: 8080
#            initialDelaySeconds: 30
#            timeoutSeconds: 5
#          resources:
#            limits:
#              cpu: ${PORTAL_CPU_LIMIT}
#              memory: ${PORTAL_MEM_LIMIT}
#            requests:
#              cpu: ${PORTAL_CPU_REQUEST}
#              memory: ${PORTAL_MEM_REQUEST}
        volumes:
          - name: squonk-sso-config
            configMap:
              name: squonk-sso-config

- kind: Service
  apiVersion: v1
  metadata:
    name: portal
    namespace: ${APP_NAMESPACE}
  spec:
    selector:
      name: portal
    ports:
    - name: http
      port: 8080
      targetPort: 8080

- kind: Route
  apiVersion: v1
  metadata:
    name: portal
    namespace: ${APP_NAMESPACE}
    annotations:
      # Note: Set to false to avoid exhausting certificate generation request quota.
      # Change this to true if/when you are ready for secure the route with trusted certificates.
      kubernetes.io/tls-acme: 'false'
  spec:
    host: ${SQUONK_HOST}
    path: /portal
    to:
      kind: Service
      name: portal
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
