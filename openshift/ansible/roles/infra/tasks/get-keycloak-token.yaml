---

# This play sets two facts:
#
# - keycloak_service_password
# - keycloak_token
#
# The token is valid for a limited time
# defined by the Keycloak installation.

# We need to be admin

- name: Login (admin)
  shell: >
    oc login {{ oc_master_url }} -u {{ oc_admin }} -p {{ oc_admin_password }}
    --insecure-skip-tls-verify=true
  changed_when: False

# Get some secrets from the infrastructure...

- name: Find Keycloak Admin Secret
  shell: >
    oc get secret keycloak-secrets -n {{ oc_infra_project }} -o yaml
    | grep {{ keycloak_admin_user_password_field }}
  register: secret_result
  changed_when: False

- name: Set Admin User Password Fact
  set_fact:
    keycloak_admin_password: "{{ secret_result.stdout | regex_replace(regexp, '\\1') | b64decode }}"
  vars:
    regexp: '^\s+{{ keycloak_admin_user_password_field }}:\s+(\S+)\s*$'
  changed_when: False

# Now get the API token.
# There's a time-limit using this.

- name: Display credentials
  debug:
    msg: "username={{ keycloak_admin_user }} password={{ keycloak_admin_password }}"

- name: Get Keycloak API Token (master realm)
  uri:
    url: "{{ keycloak_server_url}}/realms/master/protocol/openid-connect/token"
    method: POST
    body: "{{ credentials }}&grant_type=password&client_id=admin-cli"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    validate_certs: "{{ validate_certificates }}"
  register: token_result
  vars:
    credentials: "username={{ keycloak_admin_user }}&password={{ keycloak_admin_password }}"
  changed_when: False

- name: Set Keycloak API Token Fact
  set_fact:
    keycloak_token: "{{ token_result.json.access_token }}"
  changed_when: False
