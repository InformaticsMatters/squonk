---

# Get a keycloak token (sets the fact 'keycloak_token').
# Remember that the login user may have changed to admin.

- import_tasks: get-keycloak-token.yaml

# Adding keycloak raelms.
# The steps here are: -
#
# 1. Get a list of realms using the 'users_file'
# 2. Add the realm if it's not known

#####
# 1 #
#####
#
# Get a list of roles that are already known.

- name: Get exisiting Realms
  uri:
    url: "{{ keycloak_server_url }}/admin/realms"
    validate_certs: no
    headers:
      Authorization: bearer {{ keycloak_token }}
  register: realms
  changed_when: False

# The above 'query' results in a `realms' variable. A structure
# with each query represented as an element in the 'json' array.
# i.e.
#
#  "json": [{
#     "realm": "master"
#
# To simplify further processing, we'd like a nice flat list.
- name: Collect known Realms
  set_fact:
    known_realms: "{{ realms|json_query('json[*].realm')|flatten }}"
  changed_when: False

#####
# 2 #
#####
#
# Now, add all the roles we need.

- name: Add Realm (if it does not exist)
  uri:
    url: "{{ keycloak_server_url }}/admin/realms"
    method: POST
    body: >-
      {"realm": "{{ keycloak_realm }}"}
    body_format: json
    status_code: 201
    validate_certs: no
    headers:
      Authorization: bearer {{ keycloak_token }}
  loop:
  - "{{ keycloak_realm }}"
  when:
  - item not in known_realms
