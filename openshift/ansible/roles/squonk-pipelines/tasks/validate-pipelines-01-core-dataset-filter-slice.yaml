# A pipelines validation script.
# Rules are simple: -
#
#   - One play, one test
#   - Don't fail
#
# The script can expect the following variables
# to be available (defined by the validate-pipelines playbook)...
#
# - user1_id
# - user1_name
# - user1_password

# Get an access token ---------------------------------------------------------

- import_tasks: validate-get-access-token.yaml

# Run the test ----------------------------------------------------------------

- name: Create Job
  command: >-
    curl -k
    -F 'options={"skip":2,"count":3}'
    -F 'input_data=@data/testfiles/Kinase_inhibs.json.gz;type=application/x-squonk-molecule-object+json;filename=input_data'
    -F 'input_metadata=@data/testfiles/Kinase_inhibs.metadata;type=application/x-squonk-dataset-metadata+json;filename=input_metadata'
    -H "Content-Type: multipart/mixed"
    -H "Authorization: bearer {{ je.json.access_token }}"
    -H "SquonkUsername: {{ user1_name }}"
    {{ je_rest_v1 }}/jobs/core.dataset.filter.slice.v1
  args:
    warn: False
    chdir: ../../../..
  register: resp
  changed_when: false

- name: Get Job ID
  set_fact:
    job_id: "{{ resp.stdout | from_json | json_query('jobId') }}"

- name: Display Job ID
  debug:
    var: job_id

# Wait for the Job (and Cleanup) ----------------------------------------------

- import_tasks: validate-wait.yaml
  vars:
    job_name: "core.dataset.filter.slice"
