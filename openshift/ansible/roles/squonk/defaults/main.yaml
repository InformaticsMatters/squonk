---

# What volume type are we using? One of: -
#
# - dynamic
# - nfs
# - none
#
#   When using `dynamic' remember to set
#   the accompanying 'volume_storage_class' variable (see below)
#
#   When using 'nfs' you must have provisioned the NFS volumes
#
#   When set to 'none' the user is expected to have provisioned
#   the persistent volumes and claims suitable for the project.
oc_squonk_volume_type: dynamic

# When using dynamic volumes the storage
# class needs to be defined...
oc_squonk_volume_storage_class: glusterfs-storage

# Memory/CPU requests
oc_squonk_cell_cpu_request: 100m
oc_squonk_cell_mem_request: 400Mi
oc_squonk_cell_java_tool_options: -Xmx7800m
oc_squonk_chem_cpu_request: 100m
oc_squonk_chem_mem_request: 4500Mi
oc_squonk_chem_java_tool_options: -Xmx7800m
oc_squonk_core_cpu_request: 100m
oc_squonk_core_mem_request: 3500Mi
oc_squonk_core_java_tool_options: -Xmx7800m
oc_squonk_je_cpu_request: 100m
oc_squonk_je_mem_request: 2200Mi
oc_squonk_je_java_tool_options: -Xmx7800m
oc_squonk_portal_cpu_request: 500m
oc_squonk_portal_mem_request: 1Gi

# Path to a file that defines the users we want to add to the Keycloak realm.
# The path is relative to the ansible directory (where the roles directory is)
# uncomment or define form the command-line to add users.
# To use 'ansbible/my.user' set to 'my.user'
#users_file: example.user

# Add the built-in nobody user?
# If 'yes' then a 'noby' user is added to keycloak
# using a randomly assigned password. The password is printed as the
# role executes but it is not stored anywhere.
oc_add_nobody_user: yes

# Here PVs used by the application (the squonk-work-dir for example)
# are returned to an Available state if they're currently
# in a Released state. Note: it is the user's responsibility
# to protect themselves for data loss here. This will inspect the
# "state" of all PVs in the squonk *and* infrastructure projects.
oc_recycle_released_pvs: yes

# Enable ACME routes?
# A string that's either 'true' or 'false'.
# This applies to all routes, i.e. those used by the JobExecutor and Portal.
oc_enable_acme: "false"

# Set to delete the Squonk database when Squonk is deployed.
oc_delete_database: no
