---

# Everything except the Squonk Portal
#
# oc adm policy add-cluster-role-to-user cluster-admin -z default
#
# oc process -f squonk-app-components.yaml | oc create -f -
# oc delete all,cm,pvc,routes,secrets --selector template=squonk-app-components

kind: Template
apiVersion: v1
metadata:
  name: squonk
  annotations:
    description: Squonk Application Service Definition
    tags: squonk,core,cellexecutor,chemservices,coreservices,jobexecutor
labels:
  template: squonk-app-components
  app: squonk-app

parameters:

# -------------
# Configuration
# -------------
# Common (not specific to any service)

- name: APP_NAMESPACE
  value: squonk
- name: APP_SA
  value: squonk

- name: PULL_POLICY
  value: IfNotPresent

# ------
# Flyway (DB Migration)
# ------

- name: FLYWAY_IMAGE_TAG
  value: latest

# ------------
# ChemServices
# ------------

- name: CHEM_IMAGE_TAG
  value: latest

- name: CHEM_CPU_REQUEST
  value: 100m
- name: CHEM_MEM_REQUEST
  value: 4500Mi
- name: CHEM_MEM_LIMIT
  value: 8Gi

- name: CHEM_JAVA_TOOL_OPTIONS
  value: -Xmx7800m
  description: >-
    A value used for the Java application's JAVA_TOOL_OPTIONS
    environment variable. The values are used by the container's
    underlying JVM. Use of -Xmx for example is a convenient
    way of setting the maximum JVM heap and should lie somewhere
    between the MEM_REQUEST and MEM_LIMIT (certainly less than the limit
    to allow for some 'headroom' for allocations other than from the JVM).

# ------------
# CoreServices
# ------------

- name: CORE_IMAGE_TAG
  value: latest
- name: CORE_SQUONK_BASIC_CHEM_SERVICES_URL
  value: "http://chemservices:8080"
- name: CORE_SQUONK_DOCKER_SERVICES_DIR
  value: "/var/local/squonk-docker-services"
- name: CORE_SD_PVC_SIZE
  value: 1Gi

- name: CORE_CPU_REQUEST
  value: 100m
- name: CORE_CPU_LIMIT
  value: 2000m
- name: CORE_MEM_REQUEST
  value: 3500Mi
- name: CORE_MEM_LIMIT
  value: 8Gi

- name: CORE_JAVA_TOOL_OPTIONS
  value: -Xmx7800m
  description: >-
    A value used for the Java application's JAVA_TOOL_OPTIONS
    environment variable. The values are used by the container's
    underlying JVM. Use of -Xmx for example is a convenient
    way of setting the maximum JVM heap and should lie somewhere
    between the MEM_REQUEST and MEM_LIMIT (certainly less than the limit
    to allow for some 'headroom' for allocations other than from the JVM).

objects:

# -----------------------------------------------------------------------------
# Postgres Migration (Job)
# -----------------------------------------------------------------------------

- kind: Job
  apiVersion: batch/v1
  metadata:
    name: postgres-migrate
    namespace: ${APP_NAMESPACE}
  spec:
    replicas: 1
    selector:
      name: postgres-migrate
    template:
      metadata:
        labels:
          name: postgres-migrate
      spec:
        serviceAccountName: ${APP_SA}
        containers:
        - image: squonk/flyway:${FLYWAY_IMAGE_TAG}
          name: postgres-migrate
          env:
          - name: POSTGRES_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: host
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: user-password
        restartPolicy: OnFailure

# -----------------------------------------------------------------------------
# CoreServices
# -----------------------------------------------------------------------------

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: coreservices
    namespace: ${APP_NAMESPACE}
  spec:
    replicas: 1
    selector:
      name: coreservices
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: coreservices
      spec:
        # A 'preferred' (not guaranteed)
        # node selection affinity...
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                - key: purpose
                  operator: In
                  values:
                  - app

        serviceAccountName: ${APP_SA}

        containers:
        - image: squonk/coreservices:${CORE_IMAGE_TAG}
          name: coreservices
          imagePullPolicy: ${PULL_POLICY}
          env:
          - name: RABBITMQ_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: squonk-rabbitmq-credentials
                key: host
          - name: RABBITMQ_SQUONK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: squonk-rabbitmq-credentials
                key: pass
          - name: POSTGRES_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: host
          - name: POSTGRES_SQUONK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: user-password
          - name: SQUONK_BASIC_CHEM_SERVICES_URL
            value: ${CORE_SQUONK_BASIC_CHEM_SERVICES_URL}
          - name: SQUONK_DOCKER_SERVICES_DIR
            value: ${CORE_SQUONK_DOCKER_SERVICES_DIR}
          - name: JAVA_TOOL_OPTIONS
            value: "${CORE_JAVA_TOOL_OPTIONS}"
          ports:
          - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /coreservices/rest/ping
              port: 8080
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 60
          resources:
            limits:
              cpu: ${CORE_CPU_LIMIT}
              memory: ${CORE_MEM_LIMIT}
            requests:
              cpu: ${CORE_CPU_REQUEST}
              memory: ${CORE_MEM_REQUEST}

- kind: Service
  apiVersion: v1
  metadata:
    name: coreservices
    namespace: ${APP_NAMESPACE}
  spec:
    selector:
      name: coreservices
    ports:
    - name: http
      port: 8080
      targetPort: 8080

# -----------------------------------------------------------------------------
# ChemServices
# -----------------------------------------------------------------------------

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: chemservices-basic
    namespace: ${APP_NAMESPACE}
  spec:
    replicas: 1
    selector:
      name: chemservices-basic
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: chemservices-basic
      spec:
        # A 'preferred' (not guaranteed)
        # node selection affinity...
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                - key: purpose
                  operator: In
                  values:
                  - app

        serviceAccountName: ${APP_SA}

        # Initialisation Containers...
        initContainers:
        - image: yauritux/busybox-curl
          name: wait-for-core-before-chem
          command: ['sh', '-c',
            'until (( curl http://coreservices:8080/rest/ping --connect-timeout 5 )); do sleep 2; done']

        # Pod Containers...
        containers:
        - image: squonk/chemservices-basic:${CHEM_IMAGE_TAG}
          name: chemservices-basic
          imagePullPolicy: ${PULL_POLICY}
          env:
          - name: POSTGRES_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: host
          - name: POSTGRES_SQUONK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: squonk-database-credentials
                key: user-password
          - name: RABBITMQ_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: squonk-rabbitmq-credentials
                key: host
          - name: RABBITMQ_SQUONK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: squonk-rabbitmq-credentials
                key: pass
          - name: JAVA_TOOL_OPTIONS
            value: "${CHEM_JAVA_TOOL_OPTIONS}"
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /chem-services-cdk-basic/rest/ping
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 4
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /chem-services-cdk-basic/rest/ping
              port: 8080
            initialDelaySeconds: 90
            timeoutSeconds: 4
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              memory: ${CHEM_MEM_LIMIT}
            requests:
              cpu: ${CHEM_CPU_REQUEST}
              memory: ${CHEM_MEM_REQUEST}

- kind: Service
  apiVersion: v1
  metadata:
    name: chemservices
    namespace: ${APP_NAMESPACE}
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    selector:
      name: chemservices-basic
