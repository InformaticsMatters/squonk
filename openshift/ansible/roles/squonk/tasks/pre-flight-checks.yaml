---

# Various checks to do the best wer can to make sure
# that the environment is ready for Squonk. These should
# be exhaustive tests and may evolve over time.
#
# For example: is there an infrastructure project
# and is there a RabbitMQ deployment in it?

- name: Login (admin)
  shell: oc login {{ oc_master_hostname }} -u admin -p {{ oc_admin_password }}
  changed_when: False

# Check the infrastructure project exists...

- name: Collect projects
  shell: oc get projects
  register: projects_result
  changed_when: False

- name: Check infrastructure project
  fail:
    msg: >-
      The Squonk Infrastructure project ({{ oc_infra_project }})
      does not exist
  when: oc_infra_project not in projects_result.stdout

# Check some key deployments in the infrastructure project...

- name: Collect infrastructure Deployments
  shell: oc get dc -n {{ oc_infra_project }}
  register: dc_result
  changed_when: False

- name: Check required deployments
  fail:
    msg: >-
      RabbitMQ ({{ infra_rabbit_name }}) does not exist as a deployment
      in the infrastructure project ({{ oc_infra_project }})
  when:
  - infra_rabbit_name not in dc_result.stdout

# Get some secrets from the infrastructure...

- name: Move to infrastructure project
  shell: oc project {{ oc_infra_project }}
  changed_when: False

- name: Find Keycloak Service User Secret
  shell: oc get secret keycloak-secrets -o yaml | grep {{ keycloak_service_user_password_field }}
  register: secret_result
  changed_when: False

- name: Set Service User Password Fact
  set_fact:
    keycloak_service_password: "{{ secret_result.stdout | regex_replace(regexp, '\\1') | b64decode }}"
  vars:
    regexp: '^\s+{{ keycloak_service_user_password_field }}:\s+(\S+)\s*$'
  changed_when: False
