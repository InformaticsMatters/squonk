---

# Pickup environment variables that are set
# using `source setenv.sh`...

keycloak_server_url: "{{ ansible_env.KEYCLOAK_SERVER_URL }}"
keycloak_realm: "{{ ansible_env.KEYCLOAK_REALM }}"
keycloak_ssl_required: "{{ ansible_env.KEYCLOAK_SSL_REQUIRED }}"
keycloak_logout_redirect_to: "{{ ansible_env.KEYCLOAK_LOGOUT_REDIRECT_TO }}"
keycloak_insecure_route: "{{ ansible_env.KEYCLOAK_INSECURE_ROUTE }}"
keycloak_service_user: manager
keycloak_service_user_password_field: sso-service-password

oc_project: "{{ ansible_env.OC_PROJECT }}"
oc_project_display_name: "{{ ansible_env.OC_PROJECT_DISPLAY_NAME }}"
oc_project_sa: "{{ ansible_env.OC_PROJECT_SA }}"
oc_infra_project: "{{ ansible_env.OC_INFRA_PROJECT }}"
oc_infra_project_display_name: "{{ ansible_env.OC_INFRA_PROJECT_DISPLAY_NAME }}"
oc_infra_sa: "{{ ansible_env.OC_INFRA_SA }}"
oc_master_url: "{{ ansible_env.OC_MASTER_URL }}"
oc_master_hostname: "{{ ansible_env.OC_MASTER_HOSTNAME }}"
oc_routes_basename: "{{ ansible_env.OC_ROUTES_BASENAME }}"
oc_admin: "{{ ansible_env.OC_ADMIN }}"
oc_admin_password: "{{ ansible_env.OC_ADMIN_PASSWORD }}"
oc_jobexecutor_host: "{{ ansible_env.OC_JOBEXECUTOR_HOST }}"
oc_postgresql_service: "{{ ansible_env.OC_POSTGRESQL_SERVICE }}"
oc_postgresql_volume_size: "{{ ansible_env.OC_POSTGRESQL_VOLUME_SIZE }}"
oc_infra_backup_volume_size: "{{ ansible_env.OC_INFRA_BACKUP_VOLUME_SIZE }}"
oc_cell_work_pvc_size: "{{ ansible_env.OC_CELL_WORK_PVC_SIZE }}"
oc_squonk_app: "{{ ansible_env.OC_SQUONK_APP }}"
oc_squonk_host: "{{ ansible_env.OC_SQUONK_HOST }}"
oc_squonk_client_secret: "{{ ansible_env.OC_SQUONK_CLIENT_SECRET }}"

oc_squonk_db: squonk
oc_squonk_user: squonk
oc_squonk_user_password: "{{ lookup('password', '/dev/null length=10 chars=ascii_letters') }}"

oc_squonk_cell_image_tag: "{{ ansible_env.OC_SQUONK_CELL_IMAGE_TAG }}"
oc_squonk_chem_image_tag: "{{ ansible_env.OC_SQUONK_CHEM_IMAGE_TAG }}"
oc_squonk_core_image_tag: "{{ ansible_env.OC_SQUONK_CORE_IMAGE_TAG }}"
oc_squonk_je_image_tag: "{{ ansible_env.OC_SQUONK_JE_IMAGE_TAG }}"
oc_squonk_search_image_tag: "{{ ansible_env.OC_SQUONK_SEARCH_IMAGE_TAG }}"
oc_squonk_portal_image_tag: "{{ ansible_env.OC_SQUONK_PORTAL_IMAGE_TAG }}"
oc_squonk_flyway_image_tag: "{{ ansible_env.OC_SQUONK_FLYWAY_IMAGE_TAG }}"

oc_user: "{{ ansible_env.OC_USER }}"
oc_user_password: "{{ ansible_env.OC_USER_PASSWORD }}"
oc_nfs_server: "{{ ansible_env.OC_NFS_SERVER }}"
oc_nfs_path: "{{ ansible_env.OC_NFS_PATH }}"

# Infrastructure backup schedules.
#
# We basically run upto two backup processes in the infrastructure project,
# one called 'hourly' (which actually runs at the rate you define) and one
# called 'daily'.
#
# Define the schedule and number of backups required.
# If the number is zero the corresponding backup is not deployed.
#
# The 'hourly' backup is the only backup type that actually creates new backup
# files, the others simply copy the oldest backup file from the prior backup
# type. Consequently you *must* have an hourly backup if you are running any
# other backup (daily, weekly etc). So set all counts to zero or only set
# the non-hourly counts to zero.
oc_infra_backup_hourly_schedule: "{{ ansible_env.OC_INFRA_HOURLY_BACKUP_SCHEDULE }}"
oc_infra_backup_hourly_count: "{{ ansible_env.OC_INFRA_HOURLY_BACKUP_COUNT }}"
oc_infra_backup_daily_schedule: "{{ ansible_env.OC_INFRA_DAILY_BACKUP_SCHEDULE }}"
oc_infra_backup_daily_count: "{{ ansible_env.OC_INFRA_DAILY_BACKUP_COUNT }}"

# Name fo the infrastructure RabbitMQ name
infra_rabbit_name: "rabbitmq"

# Validate certificates
#Â With tasks like curl
validate_certificates: no

# If set each deployment of Pods (infrastructure and squonk)
# will be followed by a monitoring step that waits for the
# expected Pods to initialise before moving on to the next step.
wait_for_pods: yes

# The Squonk OpenShift image pull policy.
# One, typically, of "IfNotPresent" or "Always"
image_pull_policy: IfNotPresent

# Various retry timeouts (seconds)...
pod_ready_timeout: 600
pod_terminate_timeout: 300
pv_create_timeout: 200
pvc_bind_timeout: 200
