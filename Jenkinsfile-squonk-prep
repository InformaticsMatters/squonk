#!groovy

// Part of the Squonk/OpenShift CI/CD Jenkins Pipeline.
//
// This file is used to partly deploy the Squonk application.
// It relies on the defintion of a cluster and the provision
// of admin and developer credentials.
//
// It follows the steps described in openshift/templates/READEME.md.

pipeline {
    agent any

    // ------------------------------------------------------------------------
    // Environment - ideally this would be parameterised?
    // ------------------------------------------------------------------------
    // At the moment this is hard-coded for a particular/typical minishift.
    environment {
        CLUSTER = 'squonk-dev'
        OC_ADMIN = 'admin'
        OC_INFRA_PROJECT = 'squonk-infra'
        OC_INFRA_PROJECT_DISPLAY_NAME = 'Squonk Infrastruture'
        OC_INFRA_PROJECT_DESCRIPTION = 'The Squonk-related Project Infrastructure'
        OC_PROJECT = 'squonk'
        OC_PROJECT_DISPLAY_NAME = 'Squonk Notebook'
        OC_PROJECT_DESCRIPTION = 'The Squonk Computational Notebook'
        OC_USER = 'developer'
    }

    stages {

        // --------------------------------------------------------------------
        // Create the infra project
        // --------------------------------------------------------------------
        stage('Create Squonk-Infra Project') {
            when {
                expression {
                    openshift.withCluster("${CLUSTER}") {
                        return !openshift.selector('projects', "${OC_INFRA_PROJECT}").exists()
                    }
                }
            }
            steps {
                script {
                    openshift.withCluster("${CLUSTER}") {
                        echo "The project ('${OC_INFRA_PROJECT_DESCRIPTION}') does not exist. Creating it..."
                        openshift.newProject("${OC_INFRA_PROJECT}",
                                             "--display-name=\"${OC_INFRA_PROJECT_DISPLAY_NAME}\"",
                                             "--description=\"${OC_INFRA_PROJECT_DESCRIPTION}\"")
                    }
                }
            }
        }

        // --------------------------------------------------------------------
        // Create the Squonk project
        // --------------------------------------------------------------------
        // And set some policies, required for the later stages
        stage('Create Squonk Project') {
            when {
                expression {
                    openshift.withCluster("${CLUSTER}") {
                        return !openshift.selector('projects', "${OC_PROJECT}").exists()
                    }
                }
            }
            steps {
                script {
                    openshift.withCluster("${CLUSTER}") {
                        echo "The project ('${OC_PROJECT_DESCRIPTION}') does not exist. Creating it..."
                        openshift.newProject("${OC_PROJECT}",
                                             "--display-name=\"${OC_PROJECT_DISPLAY_NAME}\"",
                                             "--description=\"${OC_PROJECT_DESCRIPTION}\"")
                        openshift.withProject("${OC_PROJECT}") {
                            openshift.raw('adm', 'policy', 'add-role-to-user', 'edit', "${OC_USER}")
                            openshift.raw('adm', 'policy', 'add-scc-to-user', 'anyuid', "system:serviceaccount:${OC_PROJECT}:default")
                            openshift.raw('adm', 'policy', 'add-cluster-role-to-user', 'cluster-admin', '-z', "default")
                        }
                    }
                }
            }
        }

    }

}
