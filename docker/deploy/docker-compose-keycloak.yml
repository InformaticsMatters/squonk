version: '2.1'

services:

   ################# keycloak container ###############################################
    # available on http://${PUBLIC_HOST}/auth
    keycloak:
        image: jboss/keycloak-postgres:2.1.0.Final
        restart: on-failure:10
        depends_on:
            postgres:
                condition: service_healthy
        expose:
        - "8443"
        environment:
            POSTGRES_PASSWORD: $POSTGRES_KEYCLOAK_PASSWORD
            KEYCLOAK_USER:
            KEYCLOAK_PASSWORD:
        volumes:
        - ./images/keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml:ro,Z
        networks:
        - squonk_front
        - squonk_back
        healthcheck:
            test: curl --fail http://localhost:8080/auth || exit 1
            interval: 20s
            timeout: 5s
            retries: 5

    ################# stage2 container ############################################
    # waits till keycloak is healthy and then terminates
    # allows to ensure that this service is running
    #
    stage2:
        image: busybox
        networks:
         - squonk_back
        depends_on:
            keycloak:
                condition: service_healthy

    # inject the keycloak configuration files
    portal:
        volumes:
        - ./images/portal/keycloak.json:/usr/local/tomcat/webapps/portal/WEB-INF/keycloak.json:ro,Z
        - ./images/portal/context.xml:/usr/local/tomcat/webapps/portal/META-INF/context.xml:ro,Z
        environment:
           KEYCLOAK_SERVER_URL:
           PUBLIC_HOST_URL:

    # Access job executor as a REST service using something like this:
    # 1. ensure your client is registered to the squonk realm. In this case we use the 'curl' client and set it's access type to public.
    # 2. obtain a token:
    #    token=$(curl -kL --data "grant_type=password&client_id=curl&username=user1&password=user1" https://172.20.0.1/auth/realms/squonk/protocol/openid-connect/token | grep -Po '(?<="access_token":")[^"]*')
    # 3. inspect the token:
    #    echo $token
    # 4. access job executor:
    #    curl -kL -H "Authorization: bearer $token" http://172.20.0.1/jobexecutor/rest/v1/jobs
    # 5. The result will be the JobStatus objects for all jobs you have submitted. Most likely and empty array.
    # Note that the token expires after a few mins.
    jobexecutor:
        image: squonk/jobexecutor-keycloak:${TAG}
        volumes:
        - ./images/jobexecutor/keycloak.json:/usr/local/tomcat/webapps/jobexecutor/WEB-INF/keycloak.json:ro,Z
        - ./images/jobexecutor/context.xml:/usr/local/tomcat/webapps/jobexecutor/META-INF/context.xml:ro,Z
        - ./images/jobexecutor/server.xml:/usr/local/tomcat/conf/server.xml:ro,Z
        environment:
           KEYCLOAK_SERVER_URL:
           PUBLIC_HOST_URL:
           CATALINA_OPTS: "-Dcom.squonk.keycloak.baseurl=$KEYCLOAK_SERVER_URL"